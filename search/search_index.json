{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Markdown Cheatsheet \u00b6 Equa\u00e7\u00f5es tipo LaTeX: * $\\sqrt{25}=5$ - \\(\\sqrt{25}=5\\) Markdown no VSCode \u00b6 Ctrl+Shift+V - Ativa o preview do VSCode Ctrl+\\ - Split screen Ctrl+J - Abre terminal Ctrl+Space - Aparece um pop up muito util das snippets do VSCode Ctrl+Shift+P: Snippet Ranger - Extens\u00e3o muito util para usar snippets, e d\u00e1 para criar os teus pr\u00f3prios. Markdown All in One Extension \u00b6 Command Usage Ctrl + B Toggle bold Ctrl + I Toggle italic Alt+S (on Windows) Toggle ~~strikethrough1~~ Ctrl + Shift + ] Toggle heading (uplevel) Ctrl + Shift + [ Toggle heading (downlevel) Ctrl/Cmd + M Toggle math environment Alt + C Check/Uncheck task list item Ctrl/Cmd + Shift + V Toggle preview Ctrl/Cmd + K V Toggle preview to side Alt*Shift+F Align Table Class Diagram Example / UML \u00b6 This was made with: Mermaid Mkdocs Usage \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Mete o que escreves no GitPages (este site)","title":"Quick Stuff"},{"location":"#markdown-cheatsheet","text":"Equa\u00e7\u00f5es tipo LaTeX: * $\\sqrt{25}=5$ - \\(\\sqrt{25}=5\\)","title":"Markdown Cheatsheet"},{"location":"#markdown-no-vscode","text":"Ctrl+Shift+V - Ativa o preview do VSCode Ctrl+\\ - Split screen Ctrl+J - Abre terminal Ctrl+Space - Aparece um pop up muito util das snippets do VSCode Ctrl+Shift+P: Snippet Ranger - Extens\u00e3o muito util para usar snippets, e d\u00e1 para criar os teus pr\u00f3prios.","title":"Markdown no VSCode"},{"location":"#markdown-all-in-one-extension","text":"Command Usage Ctrl + B Toggle bold Ctrl + I Toggle italic Alt+S (on Windows) Toggle ~~strikethrough1~~ Ctrl + Shift + ] Toggle heading (uplevel) Ctrl + Shift + [ Toggle heading (downlevel) Ctrl/Cmd + M Toggle math environment Alt + C Check/Uncheck task list item Ctrl/Cmd + Shift + V Toggle preview Ctrl/Cmd + K V Toggle preview to side Alt*Shift+F Align Table","title":"Markdown All in One Extension"},{"location":"#class-diagram-example-uml","text":"This was made with: Mermaid","title":"Class Diagram Example / UML"},{"location":"#mkdocs-usage","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Mete o que escreves no GitPages (este site)","title":"Mkdocs Usage"},{"location":"about/","text":"","title":"About"},{"location":"data_types/","text":"\\[ 1 byte (B) = 8 bits \\] Data Type Size Description byte 1 byte Stores whole numbers from -128 to 127 short 2 bytes Stores whole numbers from -32,768 to 32,767 int 4 bytes Stores whole numbers from -2,147,483,648 to 2,147,483,647 long 8 bytes Stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 float 4 bytes Stores fractional numbers. Sufficient for storing 6 to 7 decimal digits double 8 bytes Stores fractional numbers. Sufficient for storing 15 decimal digits boolean 1 bit Stores true or false values char 2 bytes Stores a single character/letter or ASCII values","title":"Data Types in programming"},{"location":"java/","text":"Java Rules \u00b6 Java is case-sensitive: \"MyClass\" and \"myclass\" has different meaning. Every line of code that runs in Java must be inside a class. A class should always start with an uppercase first letter. The name of the java file must match the class name. Classes and Objects \u00b6 Classes and objects are the two main aspects of object-oriented programming. So, a class is a template for objects, and an object is an instance of a class. When the individual objects are created, they inherit all the variables and methods from the class. Class \u00b6 Class named \"Main\" with a variable x: public class Main { int x = 5 ; } Object \u00b6 Um objeto \u00e9 criado a partir de uma classe. Neste caso vamos criar um objeto da classe Main chamado myObj. public class Main { int x = 5 ; public static void main ( String [] args ) { Main myObj1 = new Main (); // Object 1 Main myObj2 = new Main (); // Object 2 System . out . println ( myObj1 . x ); System . out . println ( myObj2 . x ); } } Podem ser criados mais do que um objeto da mesma classe. Multiple Classes \u00b6 \u00c9 poss\u00edvel criar uma classe a aceder a esta noutra classe. Isto \u00e9 \u00fatil em termos de organizar as classes. Exemplo: Uma classe tem todos os atributos e m\u00e9todos e outra tem a main() , onde est\u00e1 o c\u00f3digo a ser executado. Main . java public class Main { int x = 5 ; } Second . java class Second { public static void main ( String [] args ) { Main myObj = new Main (); System . out . println ( myObj . x ); } } Java Attributes \u00b6 As \"vari\u00e1veis\" das classes, na verdade, s\u00e3o atributos das classes. Por exemplo, uma classe, Main() , que tem dois atributos, x e y : public class Main { int x = 5 ; int y = 3 ; } Accessing Attributes \u00b6 Podemos aceder a atributos das classes, primeiramente criando um objeto da mesma e depois usando o operador . . Por exemplo, aqui estamos a aceder ao atributo x do objeto myObj da classe Main . public class Main { int x = 5 ; public static void main ( String [] args ) { Main myObj = new Main (); System . out . println ( myObj . x ); } } Modifying Attributes \u00b6 public class Main { int x ; public static void main ( String [] args ) { Main myObj = new Main (); myObj . x = 40 ; System . out . println ( myObj . x ); } } Caso x j\u00e1 tivesse um valor, por exemplo int x = 5; este seria reescrito com o valor 40. SE n\u00e3o quisermos que o valor seja edit\u00e1vel ent\u00e3o declaramos o atributo como final : final int x = 10 ; Multiple Objects and Attributes \u00b6 Se criarmos v\u00e1rios objetos de uma classe, os valores dos seus atributos n\u00e3o s\u00e3o partilhados, s\u00e3o independentes, logo podemos mudar os atributos de um objeto sem alterar os dos restantes. public class Main { int x = 5 ; public static void main ( String [] args ) { Main myObj1 = new Main (); // Object 1 Main myObj2 = new Main (); // Object 2 myObj2 . x = 25 ; System . out . println ( myObj1 . x ); // Outputs 5 System . out . println ( myObj2 . x ); // Outputs 25 } } Multiple Attributes \u00b6 Podem ser criados tantos atributos quanto quisermos. public class Main { String fname = \"John\" ; String lname = \"Doe\" ; int age = 24 ; public static void main ( String [] args ) { Main myObj = new Main (); System . out . println ( \"Name: \" + myObj . fname + \" \" + myObj . lname ); System . out . println ( \"Age: \" + myObj . age ); } } \u00b6 Java Methods \u00b6","title":"Java"},{"location":"java/#java-rules","text":"Java is case-sensitive: \"MyClass\" and \"myclass\" has different meaning. Every line of code that runs in Java must be inside a class. A class should always start with an uppercase first letter. The name of the java file must match the class name.","title":"Java Rules"},{"location":"java/#classes-and-objects","text":"Classes and objects are the two main aspects of object-oriented programming. So, a class is a template for objects, and an object is an instance of a class. When the individual objects are created, they inherit all the variables and methods from the class.","title":"Classes and Objects"},{"location":"java/#class","text":"Class named \"Main\" with a variable x: public class Main { int x = 5 ; }","title":"Class"},{"location":"java/#object","text":"Um objeto \u00e9 criado a partir de uma classe. Neste caso vamos criar um objeto da classe Main chamado myObj. public class Main { int x = 5 ; public static void main ( String [] args ) { Main myObj1 = new Main (); // Object 1 Main myObj2 = new Main (); // Object 2 System . out . println ( myObj1 . x ); System . out . println ( myObj2 . x ); } } Podem ser criados mais do que um objeto da mesma classe.","title":"Object"},{"location":"java/#multiple-classes","text":"\u00c9 poss\u00edvel criar uma classe a aceder a esta noutra classe. Isto \u00e9 \u00fatil em termos de organizar as classes. Exemplo: Uma classe tem todos os atributos e m\u00e9todos e outra tem a main() , onde est\u00e1 o c\u00f3digo a ser executado. Main . java public class Main { int x = 5 ; } Second . java class Second { public static void main ( String [] args ) { Main myObj = new Main (); System . out . println ( myObj . x ); } }","title":"Multiple Classes"},{"location":"java/#java-attributes","text":"As \"vari\u00e1veis\" das classes, na verdade, s\u00e3o atributos das classes. Por exemplo, uma classe, Main() , que tem dois atributos, x e y : public class Main { int x = 5 ; int y = 3 ; }","title":"Java Attributes"},{"location":"java/#accessing-attributes","text":"Podemos aceder a atributos das classes, primeiramente criando um objeto da mesma e depois usando o operador . . Por exemplo, aqui estamos a aceder ao atributo x do objeto myObj da classe Main . public class Main { int x = 5 ; public static void main ( String [] args ) { Main myObj = new Main (); System . out . println ( myObj . x ); } }","title":"Accessing Attributes"},{"location":"java/#modifying-attributes","text":"public class Main { int x ; public static void main ( String [] args ) { Main myObj = new Main (); myObj . x = 40 ; System . out . println ( myObj . x ); } } Caso x j\u00e1 tivesse um valor, por exemplo int x = 5; este seria reescrito com o valor 40. SE n\u00e3o quisermos que o valor seja edit\u00e1vel ent\u00e3o declaramos o atributo como final : final int x = 10 ;","title":"Modifying Attributes"},{"location":"java/#multiple-objects-and-attributes","text":"Se criarmos v\u00e1rios objetos de uma classe, os valores dos seus atributos n\u00e3o s\u00e3o partilhados, s\u00e3o independentes, logo podemos mudar os atributos de um objeto sem alterar os dos restantes. public class Main { int x = 5 ; public static void main ( String [] args ) { Main myObj1 = new Main (); // Object 1 Main myObj2 = new Main (); // Object 2 myObj2 . x = 25 ; System . out . println ( myObj1 . x ); // Outputs 5 System . out . println ( myObj2 . x ); // Outputs 25 } }","title":"Multiple Objects and Attributes"},{"location":"java/#multiple-attributes","text":"Podem ser criados tantos atributos quanto quisermos.","title":"Multiple Attributes"},{"location":"java/#public-class-main-string-fname-john-string-lname-doe-int-age-24-public-static-void-mainstring-args-main-myobj-new-main-systemoutprintlnname-myobjfname-myobjlname-systemoutprintlnage-myobjage","text":"","title":"public class Main {\n  String fname = &quot;John&quot;;\n  String lname = &quot;Doe&quot;;\n  int age = 24;\n\n  public static void main(String[] args) {\n    Main myObj = new Main();\n    System.out.println(&quot;Name: &quot; + myObj.fname + &quot; &quot; + myObj.lname);\n    System.out.println(&quot;Age: &quot; + myObj.age);\n  }\n}\n"},{"location":"java/#java-methods","text":"","title":"Java Methods"},{"location":"markdown-cheat-sheet/","text":"Markdown Cheat Sheet \u00b6 Thanks for visiting The Markdown Guide ! This Markdown cheat sheet provides a quick overview of all the Markdown syntax elements. It can\u2019t cover every edge case, so if you need more information about any of these elements, refer to the reference guides for basic syntax and extended syntax . Basic Syntax \u00b6 These are the elements outlined in John Gruber\u2019s original design document. All Markdown applications support these elements. Heading \u00b6 H1 \u00b6 H2 \u00b6 H3 \u00b6 Bold \u00b6 bold text Italic \u00b6 italicized text Blockquote \u00b6 blockquote Ordered List \u00b6 First item Second item Third item Unordered List \u00b6 First item Second item Third item Code \u00b6 code Horizontal Rule \u00b6 Link \u00b6 Markdown Guide Image \u00b6 Extended Syntax \u00b6 These elements extend the basic syntax by adding additional features. Not all Markdown applications support these elements. Table \u00b6 Syntax Description Header Title Paragraph Text Fenced Code Block \u00b6 { \"firstName\": \"John\", \"lastName\": \"Smith\", \"age\": 25 } Footnote \u00b6 Here's a sentence with a footnote. [^1] [^1]: This is the footnote. Heading ID \u00b6 My Great Heading {#custom-id} \u00b6 Definition List \u00b6 term : definition Strikethrough \u00b6 ~~The world is flat.~~ Task List \u00b6 [x] Write the press release [ ] Update the website [ ] Contact the media Emoji \u00b6 That is so funny! :joy: (See also Copying and Pasting Emoji ) Highlight \u00b6 I need to highlight these ==very important words==. Subscript \u00b6 H~2~O Superscript \u00b6 X^2^","title":"Markdown Cheat Sheet"},{"location":"markdown-cheat-sheet/#markdown-cheat-sheet","text":"Thanks for visiting The Markdown Guide ! This Markdown cheat sheet provides a quick overview of all the Markdown syntax elements. It can\u2019t cover every edge case, so if you need more information about any of these elements, refer to the reference guides for basic syntax and extended syntax .","title":"Markdown Cheat Sheet"},{"location":"markdown-cheat-sheet/#basic-syntax","text":"These are the elements outlined in John Gruber\u2019s original design document. All Markdown applications support these elements.","title":"Basic Syntax"},{"location":"markdown-cheat-sheet/#heading","text":"","title":"Heading"},{"location":"markdown-cheat-sheet/#h1","text":"","title":"H1"},{"location":"markdown-cheat-sheet/#h2","text":"","title":"H2"},{"location":"markdown-cheat-sheet/#h3","text":"","title":"H3"},{"location":"markdown-cheat-sheet/#bold","text":"bold text","title":"Bold"},{"location":"markdown-cheat-sheet/#italic","text":"italicized text","title":"Italic"},{"location":"markdown-cheat-sheet/#blockquote","text":"blockquote","title":"Blockquote"},{"location":"markdown-cheat-sheet/#ordered-list","text":"First item Second item Third item","title":"Ordered List"},{"location":"markdown-cheat-sheet/#unordered-list","text":"First item Second item Third item","title":"Unordered List"},{"location":"markdown-cheat-sheet/#code","text":"code","title":"Code"},{"location":"markdown-cheat-sheet/#horizontal-rule","text":"","title":"Horizontal Rule"},{"location":"markdown-cheat-sheet/#link","text":"Markdown Guide","title":"Link"},{"location":"markdown-cheat-sheet/#image","text":"","title":"Image"},{"location":"markdown-cheat-sheet/#extended-syntax","text":"These elements extend the basic syntax by adding additional features. Not all Markdown applications support these elements.","title":"Extended Syntax"},{"location":"markdown-cheat-sheet/#table","text":"Syntax Description Header Title Paragraph Text","title":"Table"},{"location":"markdown-cheat-sheet/#fenced-code-block","text":"{ \"firstName\": \"John\", \"lastName\": \"Smith\", \"age\": 25 }","title":"Fenced Code Block"},{"location":"markdown-cheat-sheet/#footnote","text":"Here's a sentence with a footnote. [^1] [^1]: This is the footnote.","title":"Footnote"},{"location":"markdown-cheat-sheet/#heading-id","text":"","title":"Heading ID"},{"location":"markdown-cheat-sheet/#my-great-heading-custom-id","text":"","title":"My Great Heading {#custom-id}"},{"location":"markdown-cheat-sheet/#definition-list","text":"term : definition","title":"Definition List"},{"location":"markdown-cheat-sheet/#strikethrough","text":"~~The world is flat.~~","title":"Strikethrough"},{"location":"markdown-cheat-sheet/#task-list","text":"[x] Write the press release [ ] Update the website [ ] Contact the media","title":"Task List"},{"location":"markdown-cheat-sheet/#emoji","text":"That is so funny! :joy: (See also Copying and Pasting Emoji )","title":"Emoji"},{"location":"markdown-cheat-sheet/#highlight","text":"I need to highlight these ==very important words==.","title":"Highlight"},{"location":"markdown-cheat-sheet/#subscript","text":"H~2~O","title":"Subscript"},{"location":"markdown-cheat-sheet/#superscript","text":"X^2^","title":"Superscript"}]}