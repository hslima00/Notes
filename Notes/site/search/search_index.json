{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"le_stuff/","title":"Index","text":"Programing  Other <ul> <li>Data Types</li> <li>Byte</li> <li>Short</li> <li>Int</li> <li>Long</li> <li>Floating Point Types</li> <li> <p>Scientific Numbers</p> </li> <li> <p>Github Token</p> </li> </ul>   Java Basics <ul> <li>ignore_macros: true</li> <li>Java \"Rules\"</li> <li>Strings<ul> <li>String Length</li> <li>toUpperCase() &amp; toLowerCase()</li> <li>indexOf()</li> <li>String Concatenation</li> </ul> </li> <li>Java Math</li> <li>Short If..Else</li> <li>For Each Loop</li> <li>Multidimensional Arrays</li> <li>Classes and Objects<ul> <li>Class</li> <li>Object</li> </ul> </li> <li>Multiple Classes</li> <li>Java Attributes<ul> <li>Accessing Attributes</li> <li>Modifying Attributes</li> <li>Multiple Objects and Attributes</li> <li>Multiple Attributes</li> </ul> </li> <li>Java Methods<ul> <li>Method Parameters</li> </ul> </li> </ul>   Java OOP <ul> <li>Static VS Non-Static</li> <li>Java Constructors</li> <li>Java Modifiers<ul> <li>Access Modifiers</li> <li>Non-Access Modifiers</li> <li>Exemplos</li> </ul> </li> <li>Encapsulation<ul> <li>Get and Set</li> </ul> </li> <li>Java Packages<ul> <li>Creating a package<ul> <li>Compiling with a package</li> </ul> </li> </ul> </li> <li>Java Inheritance</li> <li>Java Polymorphism</li> <li>Java Abstraction</li> <li>Java Interfaces</li> <li>Enum</li> <li>User Input</li> <li>ArrayList<ul> <li>Sort ArrayList</li> </ul> </li> <li>LinkedList</li> </ul>   Linux <ul> <li>Introdu\u00e7\u00e3o</li> <li>Hist\u00f3ria e curiosidades do Linux:</li> <li>Filosofia</li> <li>Arquitetura Linux</li> <li> <p>Filesystem Hierarchy Standard  (FHS)</p> </li> <li> <p>Kernel Version Exploit</p> </li> <li> <p>SSH (Secure Shell)</p> </li> <li> <p>Useful Commands:</p> </li> <li> <p>Formato do terminal</p> </li> <li>Home dir &amp; Root dir</li> <li>Root user</li> <li>Documenta\u00e7\u00e3o de um comando</li> </ul>    Markdown  Markdown Cheat-Sheet <ul> <li>Markdown Equations</li> <li>Markdown no VSCode</li> <li>Markdown All in One Extension</li> <li>Class Diagram Example / UML</li> <li>Mkdocs Usage</li> <li>Admonitions<ul> <li>Admonition Types</li> </ul> </li> <li>But\u00f5es</li> <li>Markdown Cheat Sheet</li> <li>Basic Syntax<ul> <li>Heading</li> </ul> </li> <li>H1</li> <li>H2<ul> <li>H3</li> <li>Bold</li> <li>Italic</li> <li>Blockquote</li> <li>Ordered List</li> <li>Unordered List</li> <li>Code</li> <li>Horizontal Rule</li> <li>Link</li> <li>Image</li> </ul> </li> <li>Extended Syntax<ul> <li>Table</li> <li>Fenced Code Block</li> <li>Footnote</li> <li>Heading ID</li> <li>My Great Heading {#custom-id}</li> <li>Definition List</li> <li>Strikethrough</li> <li>Task List</li> <li>Emoji</li> <li>Highlight</li> <li>Subscript</li> <li>Superscript</li> </ul> </li> </ul>   Mkdocs-macro (buggy) <ul> <li>mkdocs-macro</li> <li>Macro<ul> <li>Macro Global</li> <li>Macro Local - Linguagem Jinja2</li> </ul> </li> <li>Filter</li> <li>Vari\u00e1veis<ul> <li>Vari\u00e1veis Globais</li> <li>Vari\u00e1veis locais</li> </ul> </li> <li>mkdocs.yml</li> <li>main.py (exemplo)</li> <li>testes</li> </ul>    Misc <ul> <li> <p>ADB mirror</p> </li> <li> <p>Links to Save:</p> </li> </ul>  warframe <ul> <li>Framedex</li> <li>Shits to do in Warframe</li> <li>Eidolon Hunting SOLO</li> <li>Volt Prime</li> <li>Zenith</li> </ul>    Ist  AAut <ul> <li> <p>Neural Networks</p> <ul> <li>McCulloch &amp; Pitts Model</li> <li>Rosenblatt algorithm</li> </ul> </li> <li> <p>Optimization</p> </li> <li> <p>Linear Regression</p> <ul> <li>Analytic Optimization!<ul> <li>Exercise:</li> <li>Exercise Data Pre-Processing:</li> </ul> </li> <li>Problem Formulation</li> <li>Summary of Linear Regression</li> </ul> </li> <li> <p>Aprendizagem Autom\u00e1tica</p> <ul> <li>Apresenta\u00e7\u00e3o</li> </ul> </li> <li>Evaluation</li> <li>Project<ul> <li>What is Machine Learning (ML)</li> <li>Learning Problems</li> <li>Supervised Learning<ul> <li>Examples:<ul> <li>Example 1</li> <li>Example 2</li> </ul> </li> <li>Regression VS. Classification</li> <li>System Architecture</li> <li>Main Questions</li> <li>Data sets</li> <li>Nearest Neighbor method</li> </ul> </li> </ul> </li> </ul>   CInte <ul> <li> <p>Presentation</p> </li> <li> <p>What is Computation Intelligence?</p> </li> <li>Neural Networks</li> <li>Evolutionary Algorithms and Swarm Intelligence</li> <li>Fuzzy Systems</li> <li>Data and What to do With it<ul> <li>Pattern Information<ul> <li>Clustering</li> </ul> </li> </ul> </li> <li>Data Types<ul> <li>Attribute (Freature) Types</li> </ul> </li> <li>Basic Statistical Descriptions of Data<ul> <li>Measiring the dispersion of data</li> </ul> </li> <li> <p>Data Preprocessing</p> <ul> <li>Data Cleaning</li> </ul> </li> <li> <p>Collective Intelligence</p> <ul> <li>Partical Swarm Optimization<ul> <li>Update Procedure for each particle</li> </ul> </li> </ul> </li> <li> <p>LSTM - Long Shot Term Memory</p> <ul> <li>Forget Gate</li> <li>Input Gate</li> <li>Update Current State</li> <li>Output Gate</li> <li>LSTM Overview</li> <li>LSTM Training</li> </ul> </li> <li> <p>GRU - Gated Recurring Network</p> </li> <li> <p>Data Preprocessing</p> <ul> <li>Data Transformation<ul> <li>Min-Max normalization</li> <li>Z-Score</li> <li>Data Matrix</li> <li>Proximity measure for nominal attributes<ul> <li>Simple matching</li> <li>Use a large binary of nominal attributes</li> </ul> </li> <li>Minkwski Distance</li> </ul> </li> <li>Vector Similarity</li> </ul> </li> <li>Training, Validation, Test sets<ul> <li>K-Fold Cross-Validation</li> </ul> </li> <li>Error Measurement<ul> <li>Root mean square error</li> <li>Mean average error</li> <li>Logarithmic Loss</li> </ul> </li> <li> <p>Confusion Matrix learning_rate</p> </li> <li> <p>MAP2 Study</p> <ul> <li>Study for the \\(2^{nd}\\) MAP</li> </ul> </li> <li>Basic Ideas and Fundamentals<ul> <li>Genotype-phenotype distinction</li> <li>Exhaustive Search</li> <li>Blind Random Search</li> <li>Traditional Search Procedures (Gradient Search)</li> <li>EA vs Traditional Gradient Methods</li> <li>Evolutionary Algorithm</li> <li>Representation, Search and Selection Operators<ul> <li>Traveling Salesman Problem</li> </ul> </li> </ul> </li> <li> <p>Evolutionary Optimization</p> <ul> <li>Basic Ideas</li> <li>Global NUmerical Optimization</li> <li>Combinatorial Optimization</li> <li>Mathematical Considerations</li> <li>Variation</li> <li>Constraint Handling</li> <li>Self-Adaption</li> </ul> </li> <li> <p>MAP1 Study</p> <ul> <li>1. What is the five number summary of a distribution and what is it useful for?</li> <li>2. Why would you want to use a histogram when analyzing data?</li> <li>3. Why should you do data cleaning before applying any intelligent technique?</li> <li>4. When dealing with missing data, what are the advantages/disadvantages of filling any missing values with the mean value of the respective attribute?</li> <li>5. Why would you use Z-Score instead of Min-Max when normalizing data?</li> <li>6. Consider the following dataset that indicates the distribution of grades of a give course<ul> <li>a) Does the data represent a histogram?</li> <li>b) Is the dataset symmetric, positively skewed or negatively skewed?</li> </ul> </li> <li>7. What is an outlier?</li> <li>8. What is cross-validation and when should you use it?</li> <li>9. Given the following confusion matrix, calculate the precision, recall and F1:</li> <li>10. What should and shouldn't do if your data is highly unbalanced?</li> <li>11. Why cant a perceptron learn a XOR function?</li> <li>12. Can a multilayer perceptron with a single hidden layer lean any continuous function?</li> <li>13. What are hidden nodes?</li> <li>14. Why should you avoid using a hight number of neurons in a hidden layer of a MLP?</li> <li>15. Consider the following NN:</li> <li>16. How many different patterns can be learned by a Hopfield Network with 500 hidden nodes?</li> <li>17. What is known as a \"regularization\" in a NN learning process? What is it used for?</li> <li>18. 4rf5vtWich of the follwing operations are valid T-norms in Fuzzy Sets</li> <li>19. Suppose X={-3, -2, -1, 0, 1, 2, 3}. Let fuzzy subsets A and B of X be defined by their membership vectors A = (0.0, 0.3, 0.8, 1.0, 0.8, 0.3, 0.0) and B = (1.0, 0.9, 0.7, 0.5, 0.2, 0.0, 0.0). Compute A\u222aB and A\u2229B using the original Zadeh definitions.</li> <li>20. Consider the following fuzzy set A:<ul> <li>Compute \\(A_{0.7}\\)</li> </ul> </li> <li>21. In a fuzzy logic control application, explain what is meant by the terms \u201cfuzzification\u201d and \u201cdefuzzification.\u201d Why are they necessary?</li> <li>22. Consider a fuzzy variable \"health\". Define a domain and the linguistic terms, so that some (hopefully) measured index could be used to activate a rule with Health in one of its antecedent clauses.</li> </ul> </li> <li> <p>Neural Networks</p> <ul> <li>The Perceptron</li> <li>MLP - Multilayered Perceptron</li> </ul> </li> <li> <p>Lab2 - CInte</p> </li> <li> <p>Output</p> <ul> <li>a)</li> <li>b)</li> </ul> </li> <li> <p>Map 2 Study</p> <ul> <li>Basic Ideas and Fundamentals</li> </ul> </li> <li> <p>Lab1</p> </li> <li>If Else</li> <li>For and Range</li> <li>Functions</li> <li>Dictionaries</li> <li>Numpy Arrays</li> </ul>   CSPH <ul> <li>Evaluation:</li> <li>Paralelism: Common Definition:</li> <li>SIMD</li> <li>Programming with ISPC</li> <li>Intel SPMD Program Compiler</li> <li>SPMD: Single program multiple data</li> </ul>   TSCOM <ul> <li>PCM Phase Change Memory</li> <li>Pros and Cons</li> <li>STT-MRAM Spin Transfer Torque Magnetic RAM</li> <li> <p>Memristors</p> </li> <li> <p>Domain Specific Accelerators DSA</p> </li> </ul>   PROE <ul> <li>Problem Set 1</li> </ul>   POO <ul> <li>Intro</li> <li>Como \u00e9 q isto ta interligado?</li> <li>Deck.class</li> <li>Criar o baralho</li> <li>Shuffle do baralho</li> <li> <p>Atribuir m\u00e3o</p> </li> <li> <p>Provide six differences, confronting each other, between abstract classes and interfaces.</p> </li> <li>Tickets - UML</li> <li>In object-oriented programming, new classes can be defined by extending existing classes. This is an example of:</li> <li>The concept of multiple inheritance is implemented in Java by</li> <li>What is printed to the terminal ?</li> <li>When does method overriding is determined?</li> <li> <p>Which interface one should implement to define a natural order?</p> </li> <li> <p>Instru\u00e7\u00f5es do projeto</p> </li> <li>Combina\u00e7\u00f5es Vitoriosas</li> <li>Paytable</li> <li>Varia\u00e7\u00f5es de jogo</li> <li>Modos do programa:</li> <li>.Debug Mode</li> <li>Simulation Mode</li> <li>Comandos e resultados</li> <li>Bet b (i)</li> <li>Credit $</li> <li>Deal d</li> <li>Hold h</li> <li>Statistics s</li> <li>Advice a</li> <li>Perda e vit\u00f3ria</li> <li>Ideia do HashMap para a statistic</li> <li>Checkpoints</li> </ul>   Controlo <ul> <li>2)</li> <li>4)</li> <li>a)</li> <li>b)</li> <li>Problema 5</li> </ul>"},{"location":"IST/","title":"Index","text":"<p>"},{"location":"IST/3_Ano/controlo/","title":"Index","text":"<p>   <p> <p>1\u00aaS\u00e9rie de Problemas Resolvidos</p>"},{"location":"IST/3_Ano/controlo/1a_serie_prob/","title":"1a serie prob","text":""},{"location":"IST/3_Ano/controlo/1a_serie_prob/#2","title":"2)","text":"Equa\u00e7\u00e3o diferencial <p>Equa\u00e7\u00e3o diferencial \u00e9 uma equa\u00e7\u00e3o cuja inc\u00f3gnita \u00e9 uma fun\u00e7\u00e3o que aparece na equa\u00e7\u00e3o sob a forma das respectivas derivadas.</p>   Resolu\u00e7\u00e3o"},{"location":"IST/3_Ano/controlo/1a_serie_prob/#a","title":"a)","text":"<p>O que \u00e9 pedido \u00e9 uma equa\u00e7\u00e3o diferencial que relacione a tens\u00e3o de entrada com a tens\u00e3o de sa\u00edda. </p> <p>Usaremos para isso: </p> <ul> <li>Equa\u00e7\u00e3o das Malhas </li> <li>Equa\u00e7\u00e3o do Condensador </li> </ul> <pre>\\[\nv_i(t)= Ri(t)+v_o(t)\n\\]</pre> <pre>\\[  \ni(t)=C*\\frac{dv_o(t)}{dt}\n\\]</pre> <p>Substituindo a equa\u00e7\u00e3o de \\(i(t)\\) na de \\(v_i(t)\\) ficamos com: </p> <pre>\\[\nv_i(t)=RC*\\frac{dv_o(t)}{dt}+v_o(t)\n\\]</pre> <p>A equa\u00e7\u00e3o de cima por si s\u00f3 j\u00e1 \u00e9 uma equa\u00e7\u00e3o diferencial. Podemos obter a equa\u00e7\u00e3o \"cl\u00e1ssica\" para um circuito RC dividindo tudo por \\(RC\\).</p> <pre>\\[\n\\frac{1}{RC}v_i(t)=\\frac{dv_o(t)}{dt}+\\frac{1}{RC}v_o(t) \n\\]</pre>"},{"location":"IST/3_Ano/controlo/1a_serie_prob/#b","title":"b)","text":"<p>Aqui pretende-se obter a transformada de laplace \\(H(s)=\\frac{V_o(s)}{V_i(s)}\\). Para isto basta pegar na equa\u00e7\u00e3o resolvida em a) uma vez que relaciona as duas. </p> <p>\\(TL^{-1}\\):</p> <pre>\\[\n\\frac{1}{RC}V_i(s)=sV_o(t)+\\frac{1}{RC}V_o(s)\n\\]</pre> <pre>\\[\n\\equiv\n\\]</pre> <pre>\\[\nH(S)=\\frac{V_o(s)}{V_i(s)}=\\frac{\\frac{1}{RC}}{s+\\frac{1}{RC}}\n\\]</pre>"},{"location":"IST/3_Ano/controlo/1a_serie_prob/#c","title":"c)","text":"<p>Determinar a resposta no tempo de \\(v_o(t)\\) um escal\u00e3o unit\u00e1rio basicamente ver qual \u00e9 a resposta de \\(V_o(s)\\) a um \\(V_i(s)=\\frac{1}{s}\\). </p> <p>Ficaria portanto:</p> <pre>\\[\nV_o(s)=\\frac{\\frac{1}{RC}}{s+\\frac{1}{RC}}V_i(s)\\ \\ \\ \\And \\ \\ \\ V_i(s)=\\frac{1}{s}\n\\]</pre> <pre>\\[\nV_o(s)=\\frac{\\frac{1}{RC}}{s(s+\\frac{1}{RC})}\n\\]</pre> <p>Agora temos de decompor esta fun\u00e7\u00e3o em fra\u00e7\u00f5es simples: </p>  Resolu\u00e7\u00e3o em fra\u00e7\u00f5es simples   <p>Ficando portanto:</p> <pre>\\[\nV_o(s)=\\frac{1}{s}-\\frac{1}{s-\\frac{1}{RC}}\n\\]</pre> <p>Fazendo a transformada inversa de Laplace \\(TL^{-1}\\) de \\(V_o(t)\\):</p> <pre>\\[\nv_o(t)=u(t)+e^{-\\frac{1}{RC}}u(t) % (1)\n\\]</pre>  Note"},{"location":"IST/3_Ano/controlo/1a_serie_prob/#d","title":"d)","text":"<p>O que \u00e9 q acontece \u00e0 resposta temporal de \\(v_o(t)\\) caso \\(RC\\) aumente ou diminua? </p> <p>Se olharmos para \\(H(s)\\) e o projetarmos num eixo imagin\u00e1rio  $$ H(jw) = frac{frac{1}{RC}}{jomega+frac{1}{RC}} $$</p>     <p>Quando o polo se distancia da origem a frequ\u00eancia de corte aumenta!!! </p>  <p>Se a \\(f_c\\) aumenta, o sistema responde mais r\u00e1pido:</p>  <p>Como seria de esperar, se RC aumentar, verifica-se o efeito inverso.</p>"},{"location":"IST/3_Ano/controlo/1a_serie_prob/#4","title":"4)","text":""},{"location":"IST/3_Ano/controlo/1a_serie_prob/#a_1","title":"a)","text":"Resolu\u00e7\u00e3o"},{"location":"IST/3_Ano/controlo/1a_serie_prob/#b_1","title":"b)","text":"Resolu\u00e7\u00e3o"},{"location":"IST/3_Ano/controlo/1a_serie_prob/#problema-5","title":"Problema 5","text":""},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/analise_vp/","title":"Analise vp","text":""},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/analise_vp/#intro","title":"Intro","text":"<p>Esta sec\u00e7\u00e3o vai ser uma an\u00e1lise ao template arranjado no GitHub.</p> <p>Os ficheiros est\u00e3o no nosso reposit\u00f3rio, aqui.</p>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/analise_vp/#como-\u00e9-q-isto-ta-interligado","title":"Como \u00e9 q isto ta interligado?","text":"Sobre como \u00e9 q foi feito o UML <p>Se quiseres saber como \u00e9 q fiz este UML t\u00e1 aqui, mas basicamente d\u00e1 para fazer rever engineering com o Visual Paradigm diretamente do c\u00f3digo. Tools&gt;Code&gt;Reverse Java Code</p>  <p>Selecionas os .java</p>  <p>Fazes um novo diagram e arrastas para l\u00e1 as classes. Elas j\u00e1 v\u00e3o estar interligadas. Might be useful para depois vermos se o nosso UML final est\u00e1 bem ou n\u00e3o.</p>   <p><code>VideoPoker.class</code> - \u00e9 tipo a main.class nos labs de java</p> <p>Ela s\u00f3 inicializa o jogo basically, que na pratica \u00e9 criar um novo objeto da <code>Game.class</code>:</p>  C\u00f3digo da VideoPoker.class <pre><code>public class VideoPoker {\npublic static void main(String[] args) {\n    Game g = new Game();\n    g.play();\n}\n} // end class VideoPoker\n</code></pre>  <p>\u00c9 chamado o m\u00e9todo <code>play()</code> da classe <code>Game</code>. Este m\u00e9todo \u00e9 um loop infinito onde se joga o jogo. </p>  <p>Note</p> <p>O construtor do game cria um objeto da classe <code>Deck</code> e da classe <code>Player</code>.</p>   TODO <p>A bet do jogador est\u00e1 hardcoded a 1, tem de ser mudado depois:</p> <pre><code>    // This is game bet that is debited from player's outstanding credit\n    private final int GAME_BET = 1;\n</code></pre>  <p>D\u00e1 print a isto e aguarda instru\u00e7\u00f5es do user:</p>  <p>Como \u00e9 q isto funciona? </p> <ul> <li>Existe um loop a ver se a resposta \u00e9 de 0-9, se n\u00e3o for ent\u00e3o diz q t\u00e1 inv\u00e1lido e depois pede novamente.<ul> <li>Se for 0 ent\u00e3o sai do prog</li> <li>Se for 1-9 ent\u00e3o \u00e9 analisado noutra parte do c\u00f3digo. (break do loop)</li> </ul> </li> </ul>  Loop do user input VideoPoker.class<pre><code>    // This loop will check if the player wants to continue the Game or Exit\n    Scanner scan = new Scanner(System.in);\n    while(true) {\n        String tempValue = scan.nextLine();\n        if(tempValue.equals(\"9\")) {\n        break;\n        } else if(tempValue.equals(\"0\")) {\n        return;\n        } else {\n        System.out.print(\"Invalid entry. Please try again (Enter value: 0 or 9) - \");\n        }\n    }\n</code></pre>  <p>Depois \u00e9 feito um Shuffle do baralho. \u00c9 um m\u00e9todo da classe <code>Deck</code>, apropriadamente chamada xD. </p>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/analise_vp/#deckclass","title":"Deck.class","text":""},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/analise_vp/#criar-o-baralho","title":"Criar o baralho","text":"<p>1\u00ba - \u00e9 criado (no construtor <code>Deck</code>) o baralho, basicamente 52 objetos da class <code>Card</code>. Ou melhor, um array de objetos com 52 posi\u00e7\u00f5es. V\u00ea o c\u00f3digo abaixo q percebes. Ele chama este array <code>theDeck</code>.</p>  <p>Organiza\u00e7\u00e3o do baralho</p> <p>O gajo q fez isto basicamente usou s\u00f3 inteiros, o q at\u00e9 inteligente porque assim faz combina\u00e7\u00f5es mais facilmente \u00e9 usa menos mem\u00f3ria a comparar cartas por exemplo, acho eu.</p> <p>Tem 2 argumentos/parametros para criar o objeto <code>Card</code>, que \u00e9 o <code>suit</code> e o <code>value</code>. Suit vai de 1-4 (4 nipes) e o value 1-13 (cartas 2-10 + J Q K A)</p>  C\u00f3digo para criar o baralho <pre><code>public Deck () {\n    // sendo total_cards = 52 \n    theDeck = new Card [TOTAL_CARDS];\n    top = 0;\n\n    int suit = 1;\n    int value = 1;\n\n    for (int i = 0; i &lt; theDeck.length; i++)\n    {\n    theDeck[i] = new Card (suit, value);\n    value++;\n    if (value &gt; 13) { // new suit\n        suit++;\n        value = 1;\n    }\n    }\n}\n</code></pre>   Criar o deck como queremos <p>Como n\u00f3s queremos ter <code>xH xS xC xD</code> podemos fazer o q escrevi nestes coment\u00e1rios, e posteriormente faziamos a concatena\u00e7\u00e3o do <code>x</code> com o <code>H</code>, v\u00ea se percebes pelos coment\u00e1rios.</p> <pre><code>        int suit = 'H'; //neste caso seria string ou char\n        int value = '2';\n        for (int i = 0; i &lt; theDeck.length; i++)\n        {\n            theDeck[i] = new Card (suit, value);\n            //a primeira itera\u00e7\u00e3o vai criar uma carta 2H\n            \n            /*Podemos ter um loop dentro de outro loop:*/\n\n            /*LOOP DE FORA */\n            // mudar o nipe!\n                /*LOOP DE DENTRO */\n                /*temos agora de fazer a itera\u00e7\u00e3o do value de 2-10\n                verificar se o value j\u00e1 \u00e9 = a 10 e depois passar para J,\n                depois passar para Q\n                depois passar para K\n                depois passar para A\n                muda de nipe no loop de fora*/\n        }\n    }       \n</code></pre>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/analise_vp/#shuffle-do-baralho","title":"Shuffle do baralho","text":"<p>O gajo faz 1000 trocas entre 2 cartas com index random do baralho, not sure se \u00e9 a maneira mais eficiente de fazer isto, mas tu \u00e9s o rei do pensamento l\u00f3gico deves saber se h\u00e1 maneira melhor ou n\u00e3o. </p> <pre><code> public void shuffle () {\n    int firstCard = 0;\n    int secondCard = 0;\n\n    for (int i = 0; i &lt;= 1000; i++) // swaps two Card elements in the Deck\n    {\n      firstCard = (int) (Math.random () * TOTAL_CARDS);\n      secondCard = (int) (Math.random () * TOTAL_CARDS);\n\n      Card temp = theDeck[firstCard];\n      theDeck[firstCard] = theDeck[secondCard];\n      theDeck[secondCard] = temp;\n    }\n  }\n</code></pre>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/analise_vp/#atribuir-m\u00e3o","title":"Atribuir m\u00e3o","text":"<p>Ok, o proximo passo q o gajo faz depois de baralhar o deck \u00e9 dar uma m\u00e3o ao jogador. </p> <p>1\u00ba ele cria uma arrayList de <code>Card</code> vazia. (no constructor) e atribui os cr\u00e9ditos iniciais ao player, 50.</p>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/exam/","title":"Exam","text":""},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/exam/#provide-six-differences-confronting-each-other-between-abstract-classes-and-interfaces","title":"Provide six differences, confronting each other, between abstract classes and interfaces.","text":"<ul> <li>Abstract classes can have abstract and non-abstract methods. Interfaces can only have abstract methods.</li> <li>Abstract classes don\u2019t support multiple inheritance, only single inheritance. Interfaces do support multiple inheritance.</li> <li>An abstract class can extend a concrete class or an abstract class. An interface can only extend an interface.</li> <li>In abstract classes the keyword \u201cabstract\u201d is mandatory to declare a method as abstract. In interfaces the keyword \u201cabstract\u201d is optional.</li> <li>An abstract class can have non-public abstract methods. An interface can only have public abstract methods.</li> <li>An abstract class can have non-static fields, whereas an interface can only have public static final fields.</li> </ul>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/exam/#tickets---uml","title":"Tickets - UML","text":"Example"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/exam/#in-object-oriented-programming-new-classes-can-be-defined-by-extending-existing-classes-this-is-an-example-of","title":"In object-oriented programming, new classes can be defined by extending existing classes. This is an example of:","text":"<ul> <li>Inheritance</li> </ul>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/exam/#the-concept-of-multiple-inheritance-is-implemented-in-java-by","title":"The concept of multiple inheritance is implemented in Java by","text":"<ul> <li>II. Extending one class and implementing one or more interfaces.</li> <li>III. Implementing two or more interfaces.</li> </ul>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/exam/#what-is-printed-to-the-terminal-","title":"What is printed to the terminal ?","text":"<pre><code>Integer i = new Integer(2);\nInteger j = new Integer(2);\nSystem.out.print(i==j);\nSystem.out.print(i.equals(j));\n\nFALSE TRUE\n</code></pre>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/exam/#when-does-method-overriding-is-determined","title":"When does method overriding is determined?","text":"<ul> <li>At run time.</li> </ul>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/exam/#which-interface-one-should-implement-to-define-a-natural-order","title":"Which interface one should implement to define a natural order?","text":"<ul> <li><code>Comparable</code> </li> </ul>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/java_lab_5/","title":"Java lab 5","text":"Instru\u00e7\u00f5es do Lab5 <p>We intend to create a simple tool in Java to create images constituted by characters, called ASCII Art.</p> <p>The class Shape is abstract and it is extended by a Rectangle, a Circle, a Triangle or an Aggregate. An Aggregate is a complex form that combines two or more shapes. This form allows to create complex shapes in a modular way, for instance, it allows to create a house aggregate which is then used in a city aggregate. The method intersection receives an integer y and returns an array of integers which represents the x points such that (x,y) belongs to the respective shape.</p> <p>The class Image has the methods to obtain the ASCII art from combined shapes:</p> <p>The method line receives the number y of the line and returns a String which corresponds to the y-th line of the image of characters. The method toString returns the string with the full image of characters. (a) Implement it in Java.</p> <p>(b) Test your program (in a main method).</p>  <p> <p>UML</p>   <p>Note</p> <p>No c\u00f3digo a classe \"Shape\" de que a professora fala no enunciado \u00e9 \"Form\".</p>  <p>Primeiramente temos uma classe <code>abstract</code> chamada de <code>\"Form\"</code>. Isto porque uma forma \u00e9 abstrata, mas tem algumas coisas em comum, como por exemplo posi\u00e7\u00e3o <code>x</code> e <code>y</code>.</p> abstract class Form<pre><code>package asciiart.geom;\n\npublic abstract class Form {\n\t\n\tprotected int pos_y;\n\tprotected int pos_x;\n\t\n\tpublic Form(int pos_x,int pos_y){ \n        //click me -&gt; (1)\n\t\tthis.pos_x=pos_x;\n\t\tthis.pos_y=pos_y;\n\t}\n\n\tpublic abstract int[] intersection(int y);\t\n}\n</code></pre> <ol> <li>Como \u00e9 uma <code>abstract</code> class e n\u00e3o uma <code>interface</code> esta pode ter um constructor. Classes    abstract t\u00eam constructors, interfaces n\u00e3o.</li> </ol> <p>As classes <code>Rectangle</code>, <code>Triangle</code> e <code>Circumference</code> s\u00e3o todas Formas, isto \u00e9 v\u00e3o fazer <code>extend</code> \u00e0 classe <code>Form</code>:</p> <pre><code>public class Rectangle extends Form{\n</code></pre>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/","title":"Projeto","text":""},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#instru\u00e7\u00f5es-do-projeto","title":"Instru\u00e7\u00f5es do projeto","text":"<p>O projeto vai ser fazer um video poker.</p> <p>Como \u00e9 q isto funciona? Um gajo recebe 5 cartas \u00e0 sorte do baralho, e pode trocar cada carta uma vez.</p> <p>Depois a m\u00e3o final dele \u00e9 comparada com uma tabela de \"m\u00e3os\" e se ele tiver uma m\u00e3o com valor \u00e9 pago consoante o q t\u00e1 na tabela. </p>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#combina\u00e7\u00f5es-vitoriosas","title":"Combina\u00e7\u00f5es Vitoriosas","text":""},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#paytable","title":"Paytable","text":""},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#varia\u00e7\u00f5es-de-jogo","title":"Varia\u00e7\u00f5es de jogo","text":"<p>A varia\u00e7\u00e3o do jogo vai ser double bonus 10/7. Tem um retorno de investimento te\u00f3rico de 100.2% quando jogado com a estrat\u00e9gia perfeita. </p> <ul> <li>Outside Straight -  3 4 5 6 Q -&gt; carta a trocar nas pontas (para ser uma cena sucessiva)</li> <li>Inside Straight - 3 4 Q 6 7 -&gt; carta a trocar no meio </li> </ul>  Implementa\u00e7\u00f5es: <ul> <li> Straight flush, four of a kind, royal flush</li> <li> 4 to a royal flush</li> <li> 3 ases</li> <li> Straight, Flush, full house</li> <li> Three of a kind (except aces)</li> <li> 6. 4 to a straight flush</li> <li> 7. Two pair</li> <li> 8. High pair</li> <li> 9. 4 to a flush</li> <li> 10. 3 to a royal flush</li> <li> 11. 4 to an outside straight</li> <li> 12. Low pair</li> <li> 13. AKQJ unsuited</li> <li> 14. 3 to a straight flush (type 1)</li> <li> 15. 4 to an inside straight with 3 high cards</li> <li> 16. QJ suited</li> <li> 17. 3 to a flush with 2 high cards</li> <li> 18. 2 suited high cards</li> <li> 19. 4 to an inside straight with 2 high cards</li> <li> 20. 3 to a straight flush (type 2)</li> <li> 21. 4 to an inside straight with 1 high card</li> <li> 22. KQJ unsuited</li> <li> 23. JT suited</li> <li> 24. QJ unsuited</li> <li> 25. 3 to a flush with 1 high card</li> <li> 26. QT suited</li> <li> 27. 3 to a straight flush (type 3)</li> <li> 28. KQ, KJ unsuited</li> <li> 29. Ace</li> <li> 30. KT suited</li> <li> 31. Jack, Queen or King</li> <li> 32. 4 to an inside straight with no high cards</li> <li> 33. 3 to a flush with no high cards</li> <li> 34. Discard everything</li> </ul>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#modos-do-programa","title":"Modos do programa:","text":"<ul> <li>Debug mode - O jogo \u00e9 carregado de um ficheiro.</li> <li>Simulation mode - O jogo \u00e9 jogado com a estrat\u00e9gia perfeita para avaliar o retorno do cr\u00e9dito investido do jogador.</li> </ul>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#debug-mode","title":".Debug Mode","text":"card-file.txt<pre><code>2H KH 2S JS 6D JH TC 9H QC AS 8H 8D 7S 3H 7D 5S 7D 4D 5S 7S 3H 4H JS 4S\n</code></pre> cmd-file.txt<pre><code>b d h 1 3 $ b 10 b d $ h 3 4 b d a h 1 4\n</code></pre>  Output <p>```debug output title=\"output na consola\"</p>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#java--jar-videopokerjar--d-10000-cmd-filetxt-card-filetxt","title":"java -jar videopoker.jar -d 10000 cmd-file.txt card-file.txt","text":"<p>-cmd b player is betting 5</p> <p>-cmd d player's hand 2H KH 2S JS 6D</p> <p>-cmd h 1 3 player's hand 2H JH 2S TC 9H player loses and his credit is 9995</p> <p>-cmd $ player's credit is 9995</p> <p>-cmd b 10 b: illegal amount</p> <p>-cmd b player is betting 5</p> <p>-cmd d player's hand QC AS 8H 8D 7S</p> <p>-cmd $ player's credit is 9990</p> <p>-cmd h 3 4 player's hand 3H 7D 8H 8D 5S player loses and his credit is 9990</p> <p>-cmd b player is betting 5</p> <p>-cmd d player's hand 7D 4D 5S 7S 3H</p> <p>-cmd a player should hold cards 1 4</p> <p>-cmd h 1 4 player's hand 7D 4H JS 7S 4S player wins with a TWO PAIR and his credit is 9990</p> <p>```</p>  <p>Correr assim:</p> <p><code>java -jar &lt;&lt;YOUR-JAR-NAME&gt;&gt;.jar -d credit cmd-file card-file</code></p>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#simulation-mode","title":"Simulation Mode","text":"<p>Recebe os parametros: - <code>credit</code> - Balan\u00e7o inicial do jogador. - <code>bet</code> - Valor a apostar por jogada durante a simula\u00e7\u00e3o. - <code>nbdeals</code> - N\u00famero total de deals.</p> <p>A simula\u00e7\u00e3o deve usar sempre a jogada \"perfeita\" seguindo a tap de  implementa\u00e7\u00f5es.</p>  <p>Warning</p> <p>No final da simula\u00e7\u00e3o tem de se fazer print das estat\u00edsticas</p>  <p>Correr assim: </p> <p><code>java -jar &lt;&lt;YOUR-JAR-NAME&gt;&gt;.jar -s credit bet nbdeals</code> </p>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#comandos-e-resultados","title":"Comandos e resultados","text":""},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#bet-b-i","title":"Bet <code>b (i)</code>","text":"<p>O comando bet pode ser <code>b</code> ou <code>b i</code> em que <code>i</code> \u00e9 o valor da aposta.</p> <p>Se o comando for apenas <code>b</code> ent\u00e3o <code>i</code> ser\u00e1 o valor apostado anteriormente ou 5 caso n\u00e3o haja valor apostado anteriormente.</p> <p>Se o jogador fizer <code>b</code> depois do deal ou durante a jogada do dealer deve-se fazer o print: <code>b: illegal command</code>.  V\u00e3o existir outras ocasi\u00f5es onde usar <code>b</code> \u00e9 ilegal e deve-se fazer print de uma cena parecida.</p>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#credit-","title":"Credit <code>$</code>","text":"<p>Pode ser usado a qualquer altura do jogo.</p>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#deal-d","title":"Deal <code>d</code>","text":"<p>S\u00f3 pode ser usado depois de uma bet <code>b</code>.</p>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#hold-h","title":"Hold <code>h</code>","text":"<p>S\u00f3 pode ser usado depois de um deal <code>d</code>.</p> <p><code>h 1 2</code> -&gt; vai manter as primeiras duas cartas e discard das outras 3.</p> <p>Q\u2666 T\u2666 8\u2665 7\u2663 6\u2660 -&gt; <code>h 1 2</code> -&gt; Q\u2666 T\u2666 7\u2665 5\u2663 3\u2660 </p> <p>Depois do <code>h</code> ser usado, a consola d\u00e1 print da nova m\u00e3o do jogador. </p>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#statistics-s","title":"Statistics <code>s</code>","text":"<p>D\u00e1 print de uma cena assim: </p>  <ul> <li><code>N1...N10</code> - vezes que a jogada saiu. </li> <li><code>N11</code> - Numero de deals desde o inicio do jogo.</li> <li><code>N13</code> - Ganho em percentagem relativamente ao ganho inicial </li> </ul> <pre>\\[ ganho \\% = \\frac{C_f}{C_i}100\\]</pre>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#advice-a","title":"Advice <code>a</code>","text":"<p>Informa qual \u00e9 a jogada que o jogador deve tomar de acordo com a estrat\u00e9gia ideal.</p>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#perda-e-vit\u00f3ria","title":"Perda e vit\u00f3ria","text":"<p>Se o player perder:<code>\u2018\u2018player loses and his credit is C\u2019\u2019</code></p> <p>Se o player ganhar:<code>\u2018\u2018player wins with a H and his credit is C\u2019\u2019</code></p> <ul> <li><code>C</code> - Cr\u00e9dito atual do jogador.</li> <li><code>H</code> - M\u00e3o do jogador quando ganha.</li> </ul>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#ideia-do-hashmap-para-a-statistic","title":"Ideia do HashMap para a statistic","text":"<pre><code>// Import the HashMap class\nimport java.util.HashMap;\n\npublic class Main {\n  public static void main(String[] args) {\n\n    // Create a HashMap object called people\n    HashMap&lt;String, Integer&gt; people = new HashMap&lt;String, Integer&gt;();\n\n    // Add keys and values (Name, Age)\n    people.put(\"John\", 32);\n    people.put(\"Steve\", 30);\n    people.put(\"Angie\", 33);\n\n    for (String i : people.keySet()) {\n      System.out.println(\"Name: \" + i + \" Age: \" + people.get(i));\n    }\n    \n    people.merge(\"John\",1,Integer::sum);\n    System.out.println(people.get(\"John\"));\n  }\n}\n</code></pre>"},{"location":"IST/3_Ano/programa%C3%A7%C3%A3o_orientada_por_objetos/projeto/#checkpoints","title":"Checkpoints","text":"<ul> <li> 1 - <code>h 1 2 3 4 5</code>   9C</li> <li> 2 - <code>h 1 2 4 5</code>     TD</li> <li> 3 - <code>h 2 3 4 5</code>    9S</li> <li> 4 - <code>h 3 4 5</code>       2C</li> <li> 5 - <code>h 1 2 3 4 5</code>   4C</li> <li> 6-  <code>h 1 2 3 4 5</code>   5C</li> <li> 7-  <code>h 1 2 3 4 5</code>   3D</li> <li> 8-  <code>h 1 2 3 4 5</code></li> <li> 9- <code>h 1 2 3 4</code> </li> <li> 10- <code>h 2 3 4 5</code>     QS</li> <li> 11- <code>h 4 5</code>         4D</li> <li> 12- <code>h 3 4</code>         2C  </li> <li> 13- <code>h 1 3 4 5</code>     8C</li> <li> 14- <code>h 1 2 3 5</code>     2S</li> <li> 15- <code>h 2 3 5</code>       5S</li> <li> 16- <code>h 3 4 5</code>       8C</li> <li> 17- <code>h 2 3 4 5</code>     7C</li> <li> 18- <code>h 2 3 4 5</code>     4H</li> <li> 19- <code>h 2 3</code>         3S </li> <li> 20- <code>h 1 2</code>         9H </li> <li> 21- <code>h 2 3 4 5</code>     8H</li> <li> 22- <code>h 2 3 4 5</code>     8H</li> <li> 23 - <code>h 2 3 4 5</code>    2C</li> <li> 24- <code>h 2 4 5</code>       2H</li> <li> 25 - <code>h 3 4 5</code>      3S</li> <li> 26- <code>h 2 3 4 5</code>     7C </li> <li> 27 - <code>h 2 3 4 5</code>    6C</li> <li> 28 - <code>h 2 3 4 5</code>    3C</li> <li> 29 - <code>h 2 3 4 5</code>    8H - first check at\u00e9 aqui</li> <li> 30 - <code>h 4 5</code>        4S</li> <li> 31 - <code>h 4 5</code>        2C</li> <li> 32 - <code>h 4 5</code>        2H</li> <li> 33 - <code>h 1 4 5</code>      3H</li> <li> 34  <code>h 4 5</code>             4D</li> <li> 35  <code>h 1 4 5</code>        2C</li> <li> 36 <code>h 4 5</code>  6C</li> <li> 37 <code>h 4 5</code> 2S  </li> <li> 38 <code>h 2 3 4 5</code> 4C </li> <li> 39 <code>h 2 3 4 5</code> 3D</li> <li> 40 <code>h 2 3 5</code> 2H</li> <li> 41 <code>h 2 3 4 5</code>4S</li> <li> 42 <code>h 2 3 4 5</code>2D</li> <li> 43 <code>h 1 2 3</code>2C</li> <li> 44 <code>h 3 4</code> 2D</li> <li> 45 <code>h 4 5</code>2D</li> <li> 46 <code>h 4 5</code> 2C</li> <li> 47 <code>h 3 4</code>3D</li> <li> 48 <code>h 3 4</code>  4D</li> <li> 49 <code>h 2 3 4 5</code> 6S -&gt; muda o 6 p 9</li> <li> 50 <code>h 4 5</code> 2C</li> <li> 51 <code>h 4 5</code>2S</li> <li> 52 <code>h 4 5</code> 3S</li> <li> 53 <code>h 4 5</code> 5H</li> <li> 54 <code>h 3 4</code> 4H</li> <li> 55 <code>h 4 5</code> 2D</li> <li> 56 <code>h 3 4 5</code> 2D</li> <li> 57 <code>h 2 3 4</code> 2C</li> <li> 58 <code>h 1 4 5</code> 5D</li> <li> 59 <code>h 3 4 5</code> 2D</li> <li> 60 <code>h 1 3 5</code>6C</li> <li> 61 <code>h 4 5</code> 2C</li> <li> 62 <code>h 3 4</code> 4C</li> <li> 63 <code>h 3 4</code> 6S</li> <li> 64 <code>h 4 5</code> 6S</li> <li> 65 <code>H 4 5</code> 3H</li> <li> 66 <code>h 1 2 3</code>5C</li> <li> 67 <code>h 123</code>3H</li> <li> 68 <code>h 123</code>2C</li> <li> 69 <code>h124</code>2D</li> <li> 70 <code>h</code>4C</li> <li> 71 <code>h 4 5</code>4D</li> <li> 72 <code>h 4 5</code>3D</li> <li> 73 4S</li> <li> 74 5S</li> <li> 75 5H</li> <li> 76 <code>h 5</code>2C</li> <li> 77 6C</li> <li> 78 <code>h 1 2 3</code>3H</li> <li> 79 <code>h 5</code> 2S</li> <li> 80 <code>h 5</code>2H</li> <li> 81 <code>h 1 2 3 4</code>2D</li> </ul>"},{"location":"IST/4_ano/AAut/1st_class/","title":"Aprendizagem Autom\u00e1tica","text":""},{"location":"IST/4_ano/AAut/1st_class/#apresenta\u00e7\u00e3o","title":"Apresenta\u00e7\u00e3o","text":"<p>Prof: Jorge S. Marques </p>"},{"location":"IST/4_ano/AAut/1st_class/#evaluation","title":"Evaluation","text":"<p>Exam (50%) + Lab (50%)</p> <p>Lab: students organized in groups of 2, should perform a project and a 10 pages report. The project includes 2 parts: regression problem and a classification problem. Lab enrolment is done through fenix in the first week.</p>"},{"location":"IST/4_ano/AAut/1st_class/#project","title":"Project","text":"<p>Important</p> <p>2 parts </p> <p>predict from a training set and should predict from new examples.  1 data set given for evaluation and training and a second data set for prediction. Training set with features and outcome, and evaluation set with only features.    </p> <p>2nd part - classification of butterfly images ??? </p> <p>10 pages report     </p>"},{"location":"IST/4_ano/AAut/1st_class/#what-is-machine-learning-ml","title":"What is Machine Learning (ML)","text":"<p>Quote</p> <p>\"the field of study that gives computers the ability to learn without being explicitly programmed. (Arthur Samuel, 1959) </p>  <p>Basically ML is used (but not only) to solve problems that mathematically are too difficult. -&gt; Intersection with Computational Intelligence! </p>  <p>Quote</p> <p>\u201dA computer program is said to learn from experience E with respect to some task T and some performance measure P, if its performance on T, as measured by P, improves with experience.\u201d (Tom Mitchell, 1998)</p> <p>Ou seja, aprende pela experi\u00eancia E como? Fazendo tarefas e depois havendo um avaliador para cada tarefa T que ele fa\u00e7a, o tal P.</p>  <p>Being P the performance index. </p>"},{"location":"IST/4_ano/AAut/1st_class/#learning-problems","title":"Learning Problems","text":"<p>There are 3 categories of Learning Problems: </p>  <p>Learning Problems</p> <ul> <li>Supervised Learning: receives inputs an output values, and the computer goal is to find the map between them.</li> <li>Unsupervised Learning: receives only inputs.</li> <li>Reinforcement Learning: learns from environment feedback.</li> </ul>  <p>Danger</p> <p>Only the first category will be studied in the course. </p>"},{"location":"IST/4_ano/AAut/1st_class/#supervised-learning","title":"Supervised Learning","text":"<p>There are 3 key concepts in SL: </p> <ul> <li>features (input) </li> <li>outcome (output)</li> <li>predictor (function model) \\(\u0177=f(x)\\) such that \\(\u0177\\) (predicted) is similar to output \\(y\\) (training)</li> </ul>"},{"location":"IST/4_ano/AAut/1st_class/#examples","title":"Examples:","text":""},{"location":"IST/4_ano/AAut/1st_class/#example-1","title":"Example 1","text":"<p>2 inputs as values computes a output as a label</p>"},{"location":"IST/4_ano/AAut/1st_class/#example-2","title":"Example 2","text":"<p>Numerical input computes numerical output </p>"},{"location":"IST/4_ano/AAut/1st_class/#regression-vs-classification","title":"Regression VS. Classification","text":"<p>If the \"mapping\" of <code>y</code> values is a scalar, then the problem is known as a regression problem: </p>  <p>If the output <code>y</code> is a label (categorical value) then the problem is known as a classification problem:</p>  <p>\\(y\\in\\Omega\\) Being \\(\\Omega\\) a set of labels \\(\\Omega={\\omega_0,...,\\omega_{K-1}}\\)</p>"},{"location":"IST/4_ano/AAut/1st_class/#system-architecture","title":"System Architecture","text":"<p>First we train the computer to create a model, then we can predict new outputs and make an assessment. </p>"},{"location":"IST/4_ano/AAut/1st_class/#main-questions","title":"Main Questions","text":"<p>The block diagram suggests three main questions: - what class of functions should we consider? - how do we fit the function f to the training data i.e.,how do we select the function? - how do we evaluate the predictor?</p>"},{"location":"IST/4_ano/AAut/1st_class/#data-sets","title":"Data sets","text":"<p>Data Sets Example</p>"},{"location":"IST/4_ano/AAut/1st_class/#nearest-neighbor-method","title":"Nearest Neighbor method","text":"<p>Classify the label of an output basead on the label of the nearest known labeled object. </p>"},{"location":"IST/4_ano/AAut/2nd_class/","title":"Linear Regression","text":"<p>\\(\\newcommand\\Beta{\\mathrm{B}}\\)</p> <p>\\(x\\in R \\ \\ features\\) -&gt; Scalar</p> <p>\\(y\\in R \\ \\ outcome\\)</p> <p>\\(\u0177=f(x) \\ \\ predictor\\) -&gt; linear (on this case, can be complex like NN)</p> <p>\\(\u0177=\\Beta_0+\\Beta_1x\\) , being \\(\\Beta_0\\) the offset</p>  <p>\\(T={(1,1)}\\)</p> <p>\\(\\Beta_0+\\Beta_1=1\\) </p> <p>Not enough data to model our system! </p>  <p>\\(T={(1,1),(3,2)}\\)</p> <p>\\(\\Beta_0+\\Beta_1=1\\)</p> <p>\\(\\Beta_0+3\\Beta_1=2\\)</p> <p>Still not a good model because lacks of data</p>  <p>\\(T={(1,1),(3,2),(0,1)}\\)</p> <p>With these 3 points, we cannot model the system, because we have more equations than variables: </p> <p>\\(\\Beta_0+\\Beta_1=1\\)</p> <p>\\(\\Beta_0+3\\Beta_1=2\\) </p> <p>\\(\\Beta_0+0\\Beta_1=1\\)</p> <p>Impossible to solve!</p> <p>We need to assume that there will be erros: </p> <p>\\(e^{(i)}=y^{(i)}-\u0177^{(i)}\\)  being \\(i\\) the example data point</p> <p>\\(e^{(i)}=y^{(i)}-f(x^{(i)})=y^{(i)}-\\Beta_0-\\Beta_1 x^{(i)}\\)</p> <p>Loss: \\((y^{(i)}-\u0177^{(i)})\u00b2\\) </p> <p>Total Loss (SSE(sum of squared errors)): \\(SSE=\\sum_{i=1}^{n}(y^{(i)}-\u0177^{(i)})\u00b2\\)</p> <p>We want to find points that minimize the loss, that being \\(\\hat\\Beta_0\\) and \\(\\hat\\Beta_1\\) </p>  <p>We now calculate the partial derivatives of SEE:</p>"},{"location":"IST/4_ano/AAut/2nd_class/#analytic-optimization","title":"Analytic Optimization!","text":""},{"location":"IST/4_ano/AAut/2nd_class/#exercise","title":"Exercise:","text":"<p>Danger</p>"},{"location":"IST/4_ano/AAut/2nd_class/#exercise-data-pre-processing","title":"Exercise Data Pre-Processing:","text":""},{"location":"IST/4_ano/AAut/2nd_class/#problem-formulation","title":"Problem Formulation","text":"<p>Putting the linear model in a matrix</p>  <p>Is read \"a collumn of ones followed by the features:</p> <p>\\(\u0177=f(x)=X\\)</p>"},{"location":"IST/4_ano/AAut/2nd_class/#summary-of-linear-regression","title":"Summary of Linear Regression","text":""},{"location":"IST/4_ano/AAut/5th_class/","title":"Optimization","text":"<p>In ML problems we need to minimize the cost function.</p>"},{"location":"IST/4_ano/AAut/6th_class/","title":"Neural Networks","text":""},{"location":"IST/4_ano/AAut/6th_class/#mcculloch--pitts-model","title":"McCulloch &amp; Pitts Model","text":"<p>Or is also called the step function.</p> <p>\\(s\\) is called activation</p> <p>\\(g(.)\\) is called the activation function </p> <p>\\(x\\) are inputs</p> <p>\\(w_k\\) are the weights.</p> <p>This kind of NN is not very used because it only outputs binary. Therefore it can only do classification tasks. </p>"},{"location":"IST/4_ano/AAut/6th_class/#rosenblatt-algorithm","title":"Rosenblatt algorithm","text":"<p>Algorithm used to train the weigths of the McCulloch &amp; Pitts Model. </p>"},{"location":"IST/4_ano/CInte/0_Presentation_and_Planning/","title":"Presentation","text":"<p>Profs: Nuno Horta, Jo\u00e3o Paulo Carvalho, Rui Neves </p> <p>3 mini-tests  - 10 Oct - 20 Oct  - 3 Nov </p> <p>or </p> <p>Exam - 16 Nov </p> <p>2 Projects - with oral presentation - 14 Oct  - 4 Nov </p> <p>Final Grade: \\(0.6\\) MAPS (or exame) + \\(0.4\\) Projects </p>"},{"location":"IST/4_ano/CInte/1st_Class/","title":"What is Computation Intelligence?","text":"<ul> <li>1992: Jim Bezdek </li> </ul> <p>Jin Bezdeck suggested IEEE - Largest Engeniering in the World the use of the name of \"Computational Intelligence\" in the upfollowing conferences about Intelligent Systems.</p> <p>IEEE CIS(Computation Intelligence Society)</p> <p>Computational Intelligence according the professor: \"Mimicking nature for problem solving\".</p>  <p>Artificial Intelligence vs Computational Intelligence</p> <p>Intersects Artificial Intelligence goals but now its techniques.</p>   <p>Machine Learning</p> <ul> <li>Some Intersection</li> <li>but ML is mostly based on blackbox approaches for data manipulation </li> </ul>   <p>Research Areas</p> <p>Main 3: - Artificial Neural Networks - Fuzzy Systems  - Evolutionary computation But also:  - Swarm Inteligente  - Simulated Annealing </p>  <p>MIxing areas: Hybrid Systems </p> <p>Techniques like NN, FL, EA (this techniques are totally different) are used in modeling systems where it is impossible do model something mathematically. </p>"},{"location":"IST/4_ano/CInte/1st_Class/#neural-networks","title":"Neural Networks","text":"<p>-INSERT A PIC HERE-</p>  <ul> <li>NN can learn! </li> <li>Learn by example</li> <li>The NN must be told the expected value from a set of example inputs.</li> <li>Given enough examples, the NN is able to learn and generalize the outputs for unforeseen inputs</li> </ul> <p>NN is good preforming tasks trivial to humans but difficult to other computational techniques such as handwritten character recognition.</p>  <p>Example</p> <p>NN application examples: </p> <ul> <li>Object detection; Speech recognition; \u2014 \u2014 \u2013 - - \u2013 -</li> </ul>"},{"location":"IST/4_ano/CInte/1st_Class/#evolutionary-algorithms-and-swarm-intelligence","title":"Evolutionary Algorithms and Swarm Intelligence","text":"<ul> <li>Primary goal: Optimization</li> <li>Metaheuristic optimization algorithms </li> <li>Inspired by biological evolution and or biological systems </li> </ul>"},{"location":"IST/4_ano/CInte/1st_Class/#fuzzy-systems","title":"Fuzzy Systems","text":"<p>exemplo do prof</p>  <p>Instead of a binary logic, we have multivalued logic that allowws intermediate values to be defnined between conventional evaluations like yes/no, true/false, black/white.</p>"},{"location":"IST/4_ano/CInte/1st_Class/#data-and-what-to-do-with-it","title":"Data and What to do With it","text":"<p>\"We are drowning in data\u2026 but starving for knowledge\"</p>"},{"location":"IST/4_ano/CInte/1st_Class/#pattern-information","title":"Pattern Information","text":"<p>Goal: Obtain Knowledge</p> <p>Input Data -&gt; Data Preprocessing -&gt; Data Mining -&gt; Post Processing </p>"},{"location":"IST/4_ano/CInte/1st_Class/#clustering","title":"Clustering","text":"<p>Categorization in the abbsence of labels - Find groups in the data that share simillar patterns </p>"},{"location":"IST/4_ano/CInte/1st_Class/#data-types","title":"Data Types","text":"<ul> <li>Raw data streams </li> <li>Time series data </li> <li>Spatial data </li> <li>multimedia</li> <li>text </li> <li>the world wide web</li> <li>structure data </li> <li>etc.</li> </ul>"},{"location":"IST/4_ano/CInte/1st_Class/#attribute-freature-types","title":"Attribute (Freature) Types","text":"<ul> <li>NOminal</li> <li>Binary/Boolean</li> <li>Convention: assign 1 to most important outcome (e.g HIV positive)</li> <li>Ordinal</li> <li>Numerical</li> <li>quantity </li> <li>interval</li> <li>ratio</li> <li>Discrete Attributes</li> <li>Countable or Uncountable</li> <li>Continuos Attributes</li> </ul>"},{"location":"IST/4_ano/CInte/1st_Class/#basic-statistical-descriptions-of-data","title":"Basic Statistical Descriptions of Data","text":"<ul> <li>Motivation</li> <li>Mean</li> <li>Median</li> <li>Mode</li> <li>EMpirical Formula</li> </ul>"},{"location":"IST/4_ano/CInte/1st_Class/#measiring-the-dispersion-of-data","title":"Measiring the dispersion of data","text":"<ul> <li>Quartiles</li> <li>Inter quartile range</li> <li>FIve number summary</li> <li>boxplot</li> <li>outlier</li> <li>Vaeiance </li> <li>Stander deviation</li> </ul>"},{"location":"IST/4_ano/CInte/1st_Class/#data-preprocessing","title":"Data Preprocessing","text":"<p>Important</p>  <ul> <li>Data cleaning </li> <li>Fill in missing values, smooth nousy data, identify or remove outliers </li> <li>Data integration</li> <li>Data reduction </li> <li>Data transformation and data discretization </li> </ul>"},{"location":"IST/4_ano/CInte/1st_Class/#data-cleaning","title":"Data Cleaning","text":"<p>Data is dirty, due to faulty instruments, humam or computer error and need to be clean.</p>  <p>Danger</p> <p>Dimensions is the amount of attributes that we have </p>"},{"location":"IST/4_ano/CInte/2nd_class/","title":"Data Preprocessing","text":""},{"location":"IST/4_ano/CInte/2nd_class/#data-transformation","title":"Data Transformation","text":"<ul> <li>Smoothins \u00ab: removing noise from data, applying a filter etc </li> <li>Normalization: scale values to fall within a smaller specified range</li> <li>min-max</li> <li>z-score </li> <li>Discretization</li> <li>Agreggation </li> </ul>"},{"location":"IST/4_ano/CInte/2nd_class/#min-max-normalization","title":"Min-Max normalization","text":"<pre>\\[\nnew_x=\\frac{x-min}{max-min}\n\\]</pre>  <p>Warning</p> <p>Min-Max does not handle outliers well!</p>"},{"location":"IST/4_ano/CInte/2nd_class/#z-score","title":"Z-Score","text":"<pre>\\[\nz=\\frac{x-mean}{standard\\ \\ deviation}\n\\]</pre>"},{"location":"IST/4_ano/CInte/2nd_class/#data-matrix","title":"Data Matrix","text":"<p>\\(n\\) data poins with \\(p\\) dimenstions</p>"},{"location":"IST/4_ano/CInte/2nd_class/#proximity-measure-for-nominal-attributes","title":"Proximity measure for nominal attributes","text":""},{"location":"IST/4_ano/CInte/2nd_class/#simple-matching","title":"Simple matching","text":"<pre>\\[\nd(i,j)=\\frac{p-m}{p}\n\\]</pre> <p>Sendo \\(m\\) o # de matches e \\(p\\) o numero de features</p>"},{"location":"IST/4_ano/CInte/2nd_class/#use-a-large-binary-of-nominal-attributes","title":"Use a large binary of nominal attributes","text":"<p>Make attributes questions and turn the dataframe binary based </p> <pre>\\[\nd(i,j)=\\frac{soma\\ \\ das \\ \\ diferencas}{soma \\ \\ do \\ \\ resto  \\ \\ sem \\ \\ contar \\ \\ com \\ \\ pares \\ \\ 0-0}\n\\]</pre>"},{"location":"IST/4_ano/CInte/2nd_class/#minkwski-distance","title":"Minkwski Distance","text":"<p>ver depois </p>"},{"location":"IST/4_ano/CInte/2nd_class/#vector-similarity","title":"Vector Similarity","text":"<ul> <li>Represent data as vectors </li> </ul>"},{"location":"IST/4_ano/CInte/2nd_class/#training-validation-test-sets","title":"Training, Validation, Test sets","text":"<ul> <li>Training dataset </li> <li>Validation/Development dataset <ul> <li>Adjusting the weights in the neurons </li> </ul> </li> <li>Test dataset</li> </ul>  <p>Important</p> <p>If a model performs better the training set than the test set than overfitting has occurred </p>   <p>Tip</p> <p>Common ratios  - 70% Train 30% Test - 70 train 15 vali 15 test  - 80 10 10 - \u2026</p>"},{"location":"IST/4_ano/CInte/2nd_class/#k-fold-cross-validation","title":"K-Fold Cross-Validation","text":"<ul> <li>Partition the data in K equal sized subset</li> </ul>  <p>Important</p> <p>Cross-Validation doesnt work in time series data</p>"},{"location":"IST/4_ano/CInte/2nd_class/#error-measurement","title":"Error Measurement","text":""},{"location":"IST/4_ano/CInte/2nd_class/#root-mean-square-error","title":"Root mean square error","text":""},{"location":"IST/4_ano/CInte/2nd_class/#mean-average-error","title":"Mean average error","text":"<p>Important</p> <p>we need a \"baseline\" to user this tipe of error measumement </p>"},{"location":"IST/4_ano/CInte/2nd_class/#logarithmic-loss","title":"Logarithmic Loss","text":"<p>Log loss quantifies teh accuracy of a classifier by penalising false classifications</p>"},{"location":"IST/4_ano/CInte/2nd_class/#confusion-matrix-learning_rate","title":"Confusion Matrix learning_rate","text":"<pre><code>image of the matrix\n</code></pre> <p>We can calculate the precision the NN with :</p> <pre>\\[\nACC=\\frac{TP+TN}{P+N}=\\frac{TP+TN}{TP+TN+FP+FN}\n\\]</pre> <p>Positive Predictive Value</p> <pre>\\[\nPPV = \\frac{TP}{TP+FP}\n\\]</pre> <p>True Positive Rate </p> <pre>\\[\nTPR=\\frac{TP}{P}=\\frac{TP}{TP+FN}\n\\]</pre> <p>F1 score - Harmonic mean of PPV and TPR </p> <pre>\\[\nF_1=\\frac{PPV*TPR}{PPV+TPR}=\\frac{2TP}{2TP+FP+FN}\n\\]</pre>  <p>Bug</p> <p>ver isto no yt depois, o prof disse q era importante perceber esta treta</p>"},{"location":"IST/4_ano/CInte/3rd_class/","title":"Neural Networks","text":""},{"location":"IST/4_ano/CInte/3rd_class/#the-perceptron","title":"The Perceptron","text":""},{"location":"IST/4_ano/CInte/3rd_class/#mlp---multilayered-perceptron","title":"MLP - Multilayered Perceptron","text":"<p>Bug</p> <p>to be continued</p>"},{"location":"IST/4_ano/CInte/4th_class/","title":"LSTM - Long Shot Term Memory","text":""},{"location":"IST/4_ano/CInte/4th_class/#forget-gate","title":"Forget Gate","text":""},{"location":"IST/4_ano/CInte/4th_class/#input-gate","title":"Input Gate","text":""},{"location":"IST/4_ano/CInte/4th_class/#update-current-state","title":"Update Current State","text":""},{"location":"IST/4_ano/CInte/4th_class/#output-gate","title":"Output Gate","text":""},{"location":"IST/4_ano/CInte/4th_class/#lstm-overview","title":"LSTM Overview","text":""},{"location":"IST/4_ano/CInte/4th_class/#lstm-training","title":"LSTM Training","text":""},{"location":"IST/4_ano/CInte/4th_class/#gru---gated-recurring-network","title":"GRU - Gated Recurring Network","text":""},{"location":"IST/4_ano/CInte/5_20out20/","title":"Collective Intelligence","text":""},{"location":"IST/4_ano/CInte/5_20out20/#partical-swarm-optimization","title":"Partical Swarm Optimization","text":""},{"location":"IST/4_ano/CInte/5_20out20/#update-procedure-for-each-particle","title":"Update Procedure for each particle","text":"<p>\\(U_1\\) introduces some mutation, its a vector. </p> <p>The number of particles depends on the problem. A lot of academic papers use 10-50 particles. </p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/","title":"MAP1 Study","text":""},{"location":"IST/4_ano/CInte/estudo_maps_1/#1-what-is-the-five-number-summary-of-a-distribution-and-what-is-it-useful-for","title":"1. What is the five number summary of a distribution and what is it useful for?","text":"<p>Five number summary: min , \\(Q_1\\) , median, \\(Q_3\\), max.</p> <ul> <li>min is the lowest value</li> <li>\\(Q_1\\): 25% of the data falls bellow this value</li> <li>\\(Q_3\\): 75% of the data falls bellow this value </li> <li>median: middle value if odd number of values, or average of the two mid values otherwise</li> <li>max is the greatest value</li> </ul>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#2-why-would-you-want-to-use-a-histogram-when-analyzing-data","title":"2. Why would you want to use a histogram when analyzing data?","text":"<p>It shows what proportion of cases fall into each of several categories. These categories are usually specified as non-overlapping intervals of some variable. Raw data is data that has not been processed for use, so in order to analyze it, is convenient to see how it distributes into the different categories/features that are envolved.</p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#3-why-should-you-do-data-cleaning-before-applying-any-intelligent-technique","title":"3. Why should you do data cleaning before applying any intelligent technique?","text":"<p>Data in the real world has a lot of potentially incorrect data due to faulty instruments, human or computer error, transmission error, etc. Data can be incomplete, noisy, inconsistent and intentional. In order to prepare the data to apply any intelligent technique we must clean it so we can have good statistical results and not produce biased estimates (leading to invalid conclusions). </p> <p>Data cleaning means fill in the missing values, smooth noisy data, identify or remove outliers, and resolve inconsistencies.</p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#4-when-dealing-with-missing-data-what-are-the-advantagesdisadvantages-of-filling-any-missing-values-with-the-mean-value-of-the-respective-attribute","title":"4. When dealing with missing data, what are the advantages/disadvantages of filling any missing values with the mean value of the respective attribute?","text":"<p>Advantages: - Simple - Potential to reduce bias by using all study data to estimate response for missing subjects.</p> <p>Disadvantages: - Significantly decreased standard deviation (variance) - Increased type 1 error - Overestimation </p> <p>If the data is skewed, the median value is a batter choice.</p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#5-why-would-you-use-z-score-instead-of-min-max-when-normalizing-data","title":"5. Why would you use Z-Score instead of Min-Max when normalizing data?","text":"<p>Normalization is scale the values to fall withing a smaller, specified range.  There is min-max and z-score normalization. This is important because many algorithms attempt to find trends in the data by comparing features of data points, but issus might arise when the features are on different scales (so normalization helps avoiding this).</p> <p>Despite z-score standardization does not preserve the relationship among the original data (it changes the data quite a bit) unlike min-max (because it is a linear transformation of the original data), z-score standardization handles outliers better and it is good for when the data range is unknown. </p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#6-consider-the-following-dataset-that-indicates-the-distribution-of-grades-of-a-give-course","title":"6. Consider the following dataset that indicates the distribution of grades of a give course","text":"<p><code>[Grade, #Students] = [[0,0];[1,0];[2, 4];[3,0];[4,7];[5,8];[6,6];[7,6];[8,6];[9,2];[10,1]]</code></p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#a-does-the-data-represent-a-histogram","title":"a) Does the data represent a histogram?","text":"<p>Yes. In an histogram x-axis are values and y-axis are frequencies. In this case \"Grade\" is the x-axis values and \"#Students\" the y-axis frequencies.</p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#b-is-the-dataset-symmetric-positively-skewed-or-negatively-skewed","title":"b) Is the dataset symmetric, positively skewed or negatively skewed?","text":"<p>Symmetric: mode = median = mean Positively skewed: mode &lt; median &lt; mean Negatively skewed: mode &gt; median &gt; mean</p> <p>mode: value that occurs most frequently in the data. In this case its 5. </p> <p>mean (algebraic measure): </p> <pre>\\[\nmean=\\frac{1}{40}*(0*0+1*0+2*4+3*0+4*7+5*8+6*6+7*6+8*6+9*2+10*1)=5,75\n\\]</pre> <p>median: middle value if odd number of values or average of the middle two value otherwise.  median = 5</p> <p>Conclusion: Since mode &lt; median &lt; mean this dataset is positively skewed. </p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#7-what-is-an-outlier","title":"7. What is an outlier?","text":"<p>An outliers is a data object that deviates significantly from the normal objects as if it were generated by a different mechanism. Usually it is not noise or error, but a higher/lower values than 1.5*IQR (Inter Quartile Range ? \\(Q_3\\)-\\(Q_1\\))</p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#8-what-is-cross-validation-and-when-should-you-use-it","title":"8. What is cross-validation and when should you use it?","text":"<p>Cross-validation is a standard tool in statistics that provides an appealing guiding principle choosing (within a set of parameters) the \"best\" model according to a certain criterion. Cross validation is an alternative to just simple separate the data for training, validation and test. </p> <p>First, that available data set is randomly partitioned into a training sample and a test set. The training sample is further partitioned into two disjoint subsets:  - An estimation set, used to select the model;  - A validation subset, used to test of validate the model. </p> <p>The motivation is to validate the model on a data set different from the one used for parameter estimation. Each sample is used the same number of time for training and once for testing. In this way, we may use the training sample to evaluate the performance of various candidate models and then choose the \"best\" one. Cross validation is appealing particularly when we have to design a large neural network with good generalization as the goal in different ways.</p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#9-given-the-following-confusion-matrix-calculate-the-precision-recall-and-f1","title":"9. Given the following confusion matrix, calculate the precision, recall and F1:","text":"<pre>\\[\n\\mathrm{Accuracy}=\\frac{TP+TN}{P+N}\n\\]</pre> <p>How many predictions are correct over all the cases?</p> <pre>\\[\n\\mathrm{Precision}=\\frac{TP}{TP+FP}\n\\]</pre> <p>Positive predicted value (PPV)</p> <pre>\\[\n\\mathrm{Recall/Sensitivity}=\\frac{TP}{P}\n\\]</pre> <p>True Positive Rate (TPR)</p> <pre>\\[\n\\mathrm{F1}=\\frac{2TP}{2TP+FP+FN}\n\\]</pre> <p>Harmonic mean of PPV an TPR</p> <pre>\\[\n\\mathrm{Specificity}=\\frac{TN}{N}\n\\]</pre> <p>True Negative Rate (TNR) -&gt; Opposite of recall</p> <pre>\\[\n\\mathrm{Precision}=\\frac{122}{122+56}=0,652\n\\]</pre> <pre>\\[\n\\mathrm{Recall}=\\frac{122}{122+26}=0,824\n\\]</pre> <pre>\\[\n\\mathrm{F1}=\\frac{2*122}{2*122+65+26}=0,728\n\\]</pre>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#10-what-should-and-shouldnt-do-if-your-data-is-highly-unbalanced","title":"10. What should and shouldn't do if your data is highly unbalanced?","text":"<p>In a balanced dataset, all classes are equally represented.  In an unbalanced dataset some classes are more prevalent than others. Balancing the training set is an option, but the validation and test sets should always heep the imbalance of the original dataset, otherwise the results are not reliable. </p> <p>We should use the right evaluation metrics, because some metrics are sensitive to the data balance and an evaluation that only uses such metrics hides the performance of the algorithm. All metrics that are calculated based of a single column of the confusion matrix are insensitive to the data balance (recall, specificity)</p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#11-why-cant-a-perceptron-learn-a-xor-function","title":"11. Why cant a perceptron learn a XOR function?","text":"<p>The perceptron can't solve any problem that is not linearly separable.  It can only implement functions where all points on one side of the hyperplane belong to the same class.  So there is no combination of weights or T that allows the perceptron to implement a function that outputs 1 if two inputs are different, and 0 otherwise.</p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#12-can-a-multilayer-perceptron-with-a-single-hidden-layer-lean-any-continuous-function","title":"12. Can a multilayer perceptron with a single hidden layer lean any continuous function?","text":"<p>With 1 number of hidden layers: \"Can approximate any function that contains a continuous mapping from one infinite space to another.\"</p> <p>A single perceptron can't deal with non-linear problems. However, by organizing a given number of perceptron into at least 3 layers (1 hidden), one obtains a trainable neural network that can behave as an universal approximator.</p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#13-what-are-hidden-nodes","title":"13. What are hidden nodes?","text":"<p>A node, also called a neuron or perceptron, is a computational unit that has one of more weighted input connections, a transfer function that combined the inputs in some way, and an output connection. Nodes are then organized into layers to comprise a network.  The hidden nodes are the nodes in the hidden layers (neither the first of the last layer. They receiver weighted inputs from the previous layer and calculate a nonlinear mapping using the activation function. </p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#14-why-should-you-avoid-using-a-hight-number-of-neurons-in-a-hidden-layer-of-a-mlp","title":"14. Why should you avoid using a hight number of neurons in a hidden layer of a MLP?","text":"<p>Theoretically, a single hidden layer is enough to solve any problem, but making a single hidden layer network learn a complex problem might be tricky and hight dependent of the quality of the training set. So, using additional layers is advised for more complex problems.</p> <ul> <li>Too few neurons -&gt; underfitting (not enough neurons to capture the problem intricacies)</li> <li>Too much neurons -&gt; overfitting (the information in the training set is not enough to train all the neurons in the hidden layers)</li> </ul>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#15-consider-the-following-nn","title":"15. Consider the following NN:","text":"<p>What is the usual sequence of events for training the network using the backpropagation algorithm?</p> <p>d. (1) calculate yj = f(Hj), (2) calculate zk = f(Ik), (3) update wkj, (4) update vji.</p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#16-how-many-different-patterns-can-be-learned-by-a-hopfield-network-with-500-hidden-nodes","title":"16. How many different patterns can be learned by a Hopfield Network with 500 hidden nodes?","text":"<p>Capacity: 138 patterns can be recalled from storage (learnt) for every 1000 nodes.</p> <p>So, in the case of 500 nodes it will be \\(\\frac{138}{2}=69\\) patterns.</p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#17-what-is-known-as-a-regularization-in-a-nn-learning-process-what-is-it-used-for","title":"17. What is known as a \"regularization\" in a NN learning process? What is it used for?","text":"<p>Techniques that modifies the learning algorithm to generalize better (improve model performance on the unseen data). Examples: Weight (L1 &amp; L2) Regularization, Dropout and Early Stopping.</p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#18-4rf5vtwich-of-the-follwing-operations-are-valid-t-norms-in-fuzzy-sets","title":"18. 4rf5vtWich of the follwing operations are valid T-norms in Fuzzy Sets","text":"<p>T-norm is a function that is commutative, associative and monotone</p> <p>R: Minimum and Product </p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#19-suppose-x-3--2--1-0-1-2-3-let-fuzzy-subsets-a-and-b-of-x-be-defined-by-their-membership-vectors-a--00-03-08-10-08-03-00-and-b--10-09-07-05-02-00-00-compute-ab-and-ab-using-the-original-zadeh-definitions","title":"19. Suppose X={-3, -2, -1, 0, 1, 2, 3}. Let fuzzy subsets A and B of X be defined by their membership vectors A = (0.0, 0.3, 0.8, 1.0, 0.8, 0.3, 0.0) and B = (1.0, 0.9, 0.7, 0.5, 0.2, 0.0, 0.0). Compute A\u222aB and A\u2229B using the original Zadeh definitions.","text":"<p>A U B -&gt; V\u00eas o maximo entre os dois e \u00e9 esse:  A \\(\\mathrm{U}^{-1}\\) B -&gt; Minimum value between sets AUB=(1.0,0.9,0.8,1.0,0.8,1.0,0.8,0.3,0.0)</p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#20-consider-the-following-fuzzy-set-a","title":"20. Consider the following fuzzy set A:","text":""},{"location":"IST/4_ano/CInte/estudo_maps_1/#compute-a_07","title":"Compute \\(A_{0.7}\\)","text":"<p>\\(x+3=0.7\\) and \\(-x-1=0.7\\)</p> <p>Solve this and the result is : </p> <p>\\(A_{0.7}\\in ]-2.7,-1.7[\\)</p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#21-in-a-fuzzy-logic-control-application-explain-what-is-meant-by-the-terms-fuzzification-and-defuzzification-why-are-they-necessary","title":"21. In a fuzzy logic control application, explain what is meant by the terms \u201cfuzzification\u201d and \u201cdefuzzification.\u201d Why are they necessary?","text":"<p>Fuzzification is the process of transforming a crisp set to a fuzzy set and defuzzification is the process of reduzing a fuzzy set into a crisp set.</p> <p>It is necessary to have two interfaces between the outside world and the fuzzy system. The fuzzifier that determinates the match between a given input and the linguistic calculate the membership degrees of the measured inputs to the linguistic terms in the fuzzier. The defuzzier is the interface between the fuzzy systems and the outside world (output side), it is needed when a crisp number is required (in the real world). So, it computes a crisp number that represents the output fuzzy set.</p>"},{"location":"IST/4_ano/CInte/estudo_maps_1/#22-consider-a-fuzzy-variable-health-define-a-domain-and-the-linguistic-terms-so-that-some-hopefully-measured-index-could-be-used-to-activate-a-rule-with-health-in-one-of-its-antecedent-clauses","title":"22. Consider a fuzzy variable \"health\". Define a domain and the linguistic terms, so that some (hopefully) measured index could be used to activate a rule with Health in one of its antecedent clauses.","text":""},{"location":"IST/4_ano/CInte/estudo_maps_2/","title":"MAP2 Study","text":""},{"location":"IST/4_ano/CInte/estudo_maps_2/#study-for-the-2nd-map","title":"Study for the \\(2^{nd}\\) MAP","text":"<ul> <li>Evolutionary Computation</li> <li>Evolutionary Optimization</li> <li>Examples</li> </ul>"},{"location":"IST/4_ano/CInte/estudo_maps_2/#basic-ideas-and-fundamentals","title":"Basic Ideas and Fundamentals","text":"<p>Motivation: Finding optimal solutions for complex problems without exact analytical description. Automate the process of evolving algorithms. </p>"},{"location":"IST/4_ano/CInte/estudo_maps_2/#genotype-phenotype-distinction","title":"Genotype-phenotype distinction","text":"<ul> <li> <p>Genotype is an organism's full hereditary information</p> </li> <li> <p>Phenotype is an organism's actual observed properties, such as morphology, development, or behavior</p> </li> </ul> <p>We can this of this two definitions like 2 separate spaces connected: </p>  <p>\\(G\\) being the Genotype, or, the actual organisms/generation space \\(P\\) being the Phenotype, or the response/behavior of the organisms when passed through a certain function. </p>  <p>Important</p> <p>Evolution can be viewed as occurring as a succession of four mapping functions</p>   <p>Mapping Functions</p> <ol> <li>Epigenesis, \\(f_1\\)</li> <li>Selection, \\(f_2\\)</li> <li>Genotypic survival, \\(f_3\\)</li> <li>Mutation, \\(f_4\\)</li> </ol>   <p>Epigenesis \\(f_1\\)</p> <p>Each element from the generation \\(g_i\\) passes through some kind of function to obtain the \"collection of phenotypes\"</p>  Example image     <p>Selection \\(f_2\\)</p> <p>Selects the best percentage of phenotypes according to our problem.</p>  Example <p>Assuming a minimization problem:</p>     <p>Genotypic Survival \\(f_3\\)</p> <p>Basically choses which organisms will survive according to their phenotypes chosen by the Selection function</p>  Example     <p>Mutation \\(f_4\\)</p> <p>Creation of offsprings from parents. </p> <p>Mutation is a set of rules of genetic variation: individual gene mutations, recombination, inversion, etc</p>"},{"location":"IST/4_ano/CInte/estudo_maps_2/#exhaustive-search","title":"Exhaustive Search","text":"<p>The procedure is certain to find the best solution but time to find it may be prohibitive.</p> <ol> <li>Generate a list of all potential solutions to the problem</li> <li>Evaluate potential solutions one by one disqualifying \"bad\" ones</li> <li>Keep track of the best one found so far</li> </ol> <p>Transcomputational Problem is a problem that requires processing of more then 1093 bits of information.</p> <p>What this means is that the Exhaustive Search doesn't work if our data is bigger than 1093 bits. </p>"},{"location":"IST/4_ano/CInte/estudo_maps_2/#blind-random-search","title":"Blind Random Search","text":"<ol> <li>Picks a random index from an array</li> <li>Picks another random index from an array</li> <li>Checks if the newly picked index has a better score then the previous</li> <li>If it has, it removes the previous index from the array</li> <li>Repeat from 2.</li> </ol> <p>Each index has a \\(\\frac{1}{k}\\) probability to be the first pick. The second index has a \\(\\frac{1}{k-1}\\) probability to be chosen and so forth.</p>  <p>Comment</p> <p>The procedure can be performed in a reasonable time, however, it usually performs poorly in real-world problems.</p>   <p>Note</p> <p>Both Exhaustive and Blind Random Search choose the next solution without regard to what has been chosen previously. </p>"},{"location":"IST/4_ano/CInte/estudo_maps_2/#traditional-search-procedures-gradient-search","title":"Traditional Search Procedures (Gradient Search)","text":"<p>This methods are not blind. They involve gradient or statistics to move rapidly in a direction that is presumed to be beneficial</p>  <p>Danger</p> <p>This methods converge very quickly on a maximum or minimum, bit run the risks of stalling into a local maxima or minima.</p>"},{"location":"IST/4_ano/CInte/estudo_maps_2/#ea-vs-traditional-gradient-methods","title":"EA vs Traditional Gradient Methods","text":"<p>Two major differences:  1. No point-to-point search, we can analyze various solutions in one generation, each competing for survival. 2. Instead of utilizing gradient information, they utilize random variation to explore for new solutions</p>"},{"location":"IST/4_ano/CInte/estudo_maps_2/#evolutionary-algorithm","title":"Evolutionary Algorithm","text":"<p>The relation between parents and offsprings is inheritance. If there is no inheritance then we basically have a blind random search.</p> <p>Evolutionary algorithms are often viewed in terms of: - the data structures that are used to represent solutions, - the search operators that are applied to those data structures, - and the selection operators that determine which solutions in a  population will influence the creation of the next generation.</p>"},{"location":"IST/4_ano/CInte/estudo_maps_2/#representation-search-and-selection-operators","title":"Representation, Search and Selection Operators","text":"<p>Selection</p> <ul> <li>can vary in effect from strong to weak</li> <li>strong selection ensure the survival of only the best solutions</li> <li>weak selection means that weaker solutions may also serve as parents</li> </ul>   <p>Search</p> <ul> <li>include mutation functions that apply to a single parent</li> <li>recombination functions apply to two or more parents.</li> <li>Crossover is a special case of recombination, where we take segments of the genome of the two parents and create an offspring with them.</li> </ul>"},{"location":"IST/4_ano/CInte/estudo_maps_2/#traveling-salesman-problem","title":"Traveling Salesman Problem","text":"<p>Given \\(n\\) cities with known distances between each pair, find the shortest tour that passes through all the cities exactly once before returning to the starting city.</p>"},{"location":"IST/4_ano/CInte/estudo_maps_2/#evolutionary-optimization","title":"Evolutionary Optimization","text":""},{"location":"IST/4_ano/CInte/estudo_maps_2/#basic-ideas","title":"Basic Ideas","text":"<ul> <li>Utilizing EA for optimization requires the problem to be well defined, and the solutions must be comparable.</li> <li>Interactive Evolutionary Computation- humans provide a judgment about the quality of proposed solutions.</li> </ul>  <p>There are two forms of optimization problem</p> <ul> <li>Numeric: the goal is a numeric solution, for example, in a minimization problem the lower the better</li> <li>Combinatoric: the goal is a combination of items that can be listed. </li> </ul>"},{"location":"IST/4_ano/CInte/estudo_maps_2/#global-numerical-optimization","title":"Global NUmerical Optimization","text":"<p>This is the basic EA.  </p> <p>When should se stop looking for solutions? - If the best solution is below a pre-defined threshold - If the best solution is not evolving for a pre-defined time (number of generations)</p> <p>In Global Numerical Optimization we create offsprings by mutation or recombination.</p> <p>One Point Cross-Over</p>  <p>Multiple Point Crossover</p>  <p>Uniform Crossover</p>   <p>EA vs Gradient</p> <ul> <li>If the problem at hand presents a smooth, convex, continuous landscape then gradient or related methods of optimization will be faster in locating the single optimum point.</li> <li>If the problem has local minima then apply EA</li> <li>If the landscape is discontinuous apply EA</li> </ul>"},{"location":"IST/4_ano/CInte/estudo_maps_2/#combinatorial-optimization","title":"Combinatorial Optimization","text":""},{"location":"IST/4_ano/CInte/estudo_maps_2/#mathematical-considerations","title":"Mathematical Considerations","text":""},{"location":"IST/4_ano/CInte/estudo_maps_2/#variation","title":"Variation","text":""},{"location":"IST/4_ano/CInte/estudo_maps_2/#constraint-handling","title":"Constraint Handling","text":""},{"location":"IST/4_ano/CInte/estudo_maps_2/#self-adaption","title":"Self-Adaption","text":""},{"location":"IST/4_ano/CInte/Labs/estudo_map2/","title":"Map 2 Study","text":""},{"location":"IST/4_ano/CInte/Labs/estudo_map2/#basic-ideas-and-fundamentals","title":"Basic Ideas and Fundamentals","text":"<ul> <li>Genotype: is an organism's full hereditary information. </li> <li>Phenotype: is an organisms actual observed properties, such as morphology, development or behavior. </li> </ul>"},{"location":"IST/4_ano/CInte/Labs/lab1/","title":"Lab1","text":"<p>Enunciado do Lab1 <code>Ctrl+Click</code></p>"},{"location":"IST/4_ano/CInte/Labs/lab1/#if-else","title":"If Else","text":"<pre><code>#If elif else example\nx = 10\nif x &lt; 0:\n    x = 0\n    print('Negative changed to zero')\nelif x == 0:\n    print('It is Zero')\nelif x == 1:\n    print('It is One')\nelse:\n    print('It is More than one')\n</code></pre>"},{"location":"IST/4_ano/CInte/Labs/lab1/#for-and-range","title":"For and Range","text":"<pre><code># Count the letters in some strings:\nwords = ['car', 'skate', 'bicycle']\nfor w in words:\n    print(w, len(w))\n</code></pre> <pre><code>#for range example\nfor i in range(1, 10, 2):\n    print(i)\n</code></pre>"},{"location":"IST/4_ano/CInte/Labs/lab1/#functions","title":"Functions","text":"<pre><code>def fib(n):    # write Fibonacci series up to n\n    \"\"\"Print a Fibonacci series up to n.\"\"\"\n    a, b = 0, 1\n    while a &lt; n:\n        print(a, end=' ')\n        a, b = b, a+b\n    print()\n</code></pre> <pre><code>fib(1000)\n</code></pre>"},{"location":"IST/4_ano/CInte/Labs/lab1/#dictionaries","title":"Dictionaries","text":"<pre><code>## Create a new Dictionary \nthisdict = {\n  \"brand\": \"Ford\",\n  \"model\": \"Mustang\",\n  \"year\": 1964\n}\nprint(thisdict)\n</code></pre> <pre><code>## Can build up a dict by starting with the the empty dict {}\n## and storing key/value pairs into the dict like this:\n## dict[key] = value-for-that-key\ndictTest = {}\ndictTest['a'] = 'alpha'\ndictTest['g'] = 'gamma'\ndictTest['o'] = 'omega'\n\nprint (dictTest)  ## {'a': 'alpha', 'o': 'omega', 'g': 'gamma'}\n</code></pre> <pre><code>print (dictTest['a'])     \t## Simple lookup, returns 'alpha'\ndictTest['a'] = 6       \t## Put new key/value into dict\nprint('a' in dictTest)      ## True\n##print(dictTest['z'])      ## Throws KeyError\nif 'z' in dictTest: \n\tprint(dictTest['z'])    ## Avoid KeyError\nprint(dictTest.get('z'))  \t## None (instead of KeyError)\n</code></pre> <pre><code>## By default, iterating over a dict iterates over its keys.\n## Note that the keys are in a random order.\nfor key in dictTest: print(key)\n## prints a g o\n</code></pre> <pre><code>## Exactly the same as above\nfor key in dictTest.keys(): print(key)\n</code></pre> <pre><code>## Get the .keys() list:\nprint(dictTest.keys())  ## ['a', 'o', 'g']\n</code></pre> <pre><code>## Likewise, there's a .values() list of values\nprint(dictTest.values())  ## ['alpha', 'omega', 'gamma']\n</code></pre> <pre><code>## .items() is the dict expressed as (key, value) tuples\nprint(dictTest.items())  ##  [('a', 'alpha'), ('o', 'omega'), ('g', 'gamma')]\n</code></pre> <pre><code>## Common case -- loop over the keys in sorted order,\n## accessing each key/value\nfor key in sorted(dictTest.keys()):\n    print(key, dictTest[key])\n</code></pre> <pre><code>## This loop syntax accesses the whole dict by looping\n## over the .items() tuple list, accessing one (key, value)\n## pair on each iteration.\nfor k, v in dictTest.items(): print(k, '&gt;', v)\n## a &gt; alpha    o &gt; omega     g &gt; gamma\n</code></pre>"},{"location":"IST/4_ano/CInte/Labs/lab1/#numpy-arrays","title":"Numpy Arrays","text":"<pre><code>#numpy array creation with elements\nimport numpy as np\na = np.arange(15).reshape(3, 5)\nprint(a)\n#array([[ 0,  1,  2,  3,  4],\n#       [ 5,  6,  7,  8,  9],\n#       [10, 11, 12, 13, 14]])\n</code></pre> <pre><code>#create a array with zeros\nb = np.zeros((3, 4))\nprint(b)\n</code></pre> <pre><code>#Find the shape of the array\nsh = a.shape\nprint(\"shape is:\", sh)\n</code></pre> <pre><code>#Find the dimension of the array\nnd = a.ndim\nprint(\"ndim is:\",nd)\n</code></pre> <pre><code>#Find the number of elements in the array\nsh = a.size\nprint(\"size is:\",sh)\n</code></pre> <pre><code>#Find the type of a variable\ntp = type(a)\nprint(\"type is:\", tp)\n</code></pre> <pre><code>#Find the type of a element in the array\ntpa = a.dtype\nprint(\"dtype is:\", tpa)\n</code></pre> <pre><code>#Find the sum of all elements in the array\nsu = a.sum()\nprint(\"sum is:\", su)\n</code></pre> <pre><code>#Find the maximum of all elements in the array\nmx = a.max()\nprint(\"Max is:\", mx)\n</code></pre> <pre><code>#There are many  fucntions to perform\n#Find the square root of all elements in the array\nsq = np.sqrt(a)\nprint(\"sqrt is:\", sq)\n</code></pre>"},{"location":"IST/4_ano/CInte/Labs/lab2/","title":"Lab2 - CInte","text":"<p>Enunciado</p> <pre><code>import numpy as np\nimport pandas as pd\nfrom datetime import datetime\n\n\noil_df = pd.read_csv('DCOILBRENTEUv2.csv') \noil_df['DCOILBRENTEU'].astype(float) \n\nmin=oil_df['DCOILBRENTEU'].min()\nmax=oil_df['DCOILBRENTEU'].max()\nmean=oil_df['DCOILBRENTEU'].mean()\n\noil_df['Normalize']= (oil_df['DCOILBRENTEU']-min)/(max-min)\nstandard_deviation=oil_df['DCOILBRENTEU'].std()\noil_df['Z-Score']= (oil_df['DCOILBRENTEU']-mean)/(standard_deviation)\n\nYdates=oil_df['DATE'].astype(np.datetime64)\noil_df.to_csv('alinea_a.csv', decimal=',', sep=';', index=False)\n\nplt.subplot(211)\nplt.plot(Ydates,oil_df['Normalize'], 'b--')\nplt.xlabel('Normalized')\nplt.ylabel('Date')\nplt.subplot(212)\nplt.plot(Ydates, oil_df['Z-Score'], 'g--')\nplt.xlabel('Z-Score')\nplt.ylabel('Date')\nplt.show()\n\nplt.figure()\nplt.plot(Ydates,oil_df['DCOILBRENTEU'].rolling(window=50).mean())\nplt.xlabel('Oil price with moving average')\nplt.ylabel('Date')\nplt.show()\n</code></pre>"},{"location":"IST/4_ano/CInte/Labs/lab2/#output","title":"Output","text":""},{"location":"IST/4_ano/CInte/Labs/lab2/#a","title":"a)","text":""},{"location":"IST/4_ano/CInte/Labs/lab2/#b","title":"b)","text":""},{"location":"IST/4_ano/PHCS/lecture1_why_paralelism/","title":"Lecture1 why paralelism","text":"<p>mkd# Paralelism </p> <p>Prof: </p>"},{"location":"IST/4_ano/PHCS/lecture1_why_paralelism/#evaluation","title":"Evaluation:","text":""},{"location":"IST/4_ano/PHCS/lecture1_why_paralelism/#paralelism-common-definition","title":"Paralelism: Common Definition:","text":"<p>Quote</p> <p>A parallel computer is a collection of processing elements that cooperate to solve problems quickly</p> <p>Quickly: We care about performance and we care about efficiency </p> <p>Collection of processing elements: We are going to use multiple processors to get it  </p>"},{"location":"IST/4_ano/PHCS/lecture1_why_paralelism/#simd","title":"SIMD","text":""},{"location":"IST/4_ano/PHCS/lecture1_why_paralelism/#programming-with-ispc","title":"Programming with ISPC","text":""},{"location":"IST/4_ano/PHCS/lecture1_why_paralelism/#intel-spmd-program-compiler","title":"Intel SPMD Program Compiler","text":""},{"location":"IST/4_ano/PHCS/lecture1_why_paralelism/#spmd-single-program-multiple-data","title":"SPMD: Single program multiple data","text":""},{"location":"IST/4_ano/PROE/problem_set_1/","title":"Problem Set 1","text":"<p>Problem Set 1 PDF</p>"},{"location":"IST/4_ano/TSCom/dec19/","title":"Dec19","text":""},{"location":"IST/4_ano/TSCom/dec19/#domain-specific-accelerators-dsa","title":"Domain Specific Accelerators DSA","text":"<p>We have specialized hardware, for example, washing machines etc </p> <p>Then we have a GPP, general porpose processor </p> <p>We are now moving back to a middle position between SH and GPP, the Specific Domain. </p> <p>DSA requires less power to process stuff, but the memory is lower.</p> <p>There are different methods to achieve DSA:</p> <ol> <li>Expand the instructions of a GPP to a specific domain </li>  </ol>"},{"location":"IST/4_ano/TSCom/dec5/","title":"Dec5","text":""},{"location":"IST/4_ano/TSCom/dec5/#pcm-phase-change-memory","title":"PCM Phase Change Memory","text":"<p>It has a glass like material that has 2 modes: amorphous and crystalline. Changing the mode also changes the electrical resistivity. Modes change by heating the material.</p>"},{"location":"IST/4_ano/TSCom/dec5/#pros-and-cons","title":"Pros and Cons","text":"<ul> <li>Requires current pulses</li> <li>Expected to scale to 9nm</li> <li>Can store more bits </li> <li>Can have more than one bit per cell</li> <li>Consumes less energy at idle, but consumes more energy if changed </li> <li>Read Latency lower than DRAM \\(2^{11}\\) vs \\(2^9\\) (PCM vs DRAM)</li> <li>Write Latency is much worse than DRAM, about 12x slower</li> </ul> <p>Non-Volatile- Keeps the value </p>"},{"location":"IST/4_ano/TSCom/dec5/#stt-mram-spin-transfer-torque-magnetic-ram","title":"STT-MRAM Spin Transfer Torque Magnetic RAM","text":"<p>You give current to change the magnetic field orientation. </p>"},{"location":"IST/4_ano/TSCom/dec5/#memristors","title":"Memristors","text":""},{"location":"Misc/Markdown_Tests/","title":"Markdown Tests","text":"<pre><code>    theme:\n    features:\n        - content.code.annotate # (1)\n</code></pre> <ol> <li> <p> I'm a code annotation! I can contain <code>code</code>, formatted     text, images, \u2026 basically anything that can be expressed in Markdown.</p> </li> <li> <p> item 1</p> <ul> <li> item A</li> <li> item B         more text<ul> <li> item a</li> <li> item b</li> <li> item c</li> </ul> </li> <li> item C</li> </ul> </li> <li> item 2</li> <li> item 3</li> </ol> BashExplanation   <pre><code>#!/bin/bash\n\necho \"Hello world!\"\n</code></pre>   <p>This is only a short example of how to make tabs.</p>    <ul> <li> text</li> <li> text</li> <li> <p> text</p> <p>#!/bin/bash grep $1 $2</p> </li> </ul> <p>#!/bin/bash grep $1 $2</p> <pre><code>\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre> Bubble sort<pre><code>\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre> <p>   <p>0%</p>     <p>5%</p>     <p>25%</p>     <p>45%</p>     <p>65%</p>     <p>85%</p>     <p>100% ready</p>   </p> <p>      </p> <p>blockdiag {     A -&gt; B -&gt; C -&gt; D;     A -&gt; E -&gt; F -&gt; G; }</p> <p>blockdiag {    // Set labels to nodes.    A [label = \"foo\"];    B [label = \"bar\"];    // And set text-color    C [label = \"baz\"];</p> <p>// Set labels to edges. (short text only)    A -&gt; B [label = \"click bar\", textcolor=\"red\"];    B -&gt; C [label = \"click baz\"];    C -&gt; A; }</p> <p>blockdiag {    // Set boder-style, backgroun-color and text-color to nodes.    A [style = dotted];    B [style = dashed];    C [color = pink, style = \"3,3,3,3,15,3\"]; //dashed_array format style    D [color = \"#888888\", textcolor=\"#FFFFFF\"];    // Set border-style and color to edges.    A -&gt; B [style = dotted];    B -&gt; C [style = dashed];    C -&gt; D [color = \"red\", style = \"3,3,3,3,15,3\"]; //dashed_array format style    // Set numbered-badge to nodes.    E [numbered = 99];    // Set arrow direction to edges.    E -&gt; F [dir = none];    F -&gt; G [dir = forward];    G -&gt; H [dir = back];    H -&gt; I [dir = both];    // Set width and height to nodes.    K [width = 192]; // default value is 128    L [height = 64]; // default value is 40    // Use thick line    J -&gt; K [thick]    K -&gt; L; }</p> <p>blockdiag {   // branching edges to multiple children   A -&gt; B, C;   // branching edges from multiple parents   D, E -&gt; F; }</p> <p>Ctrl\uff0bAlt\uff0bDel</p>"},{"location":"Misc/adb_mirror/","title":"Adb mirror","text":""},{"location":"Misc/adb_mirror/#adb-mirror","title":"ADB mirror","text":"<p>This is my current configuration for my Samsung Galaxy A70 phone. </p> <p>scrcpy</p> Installation<pre><code>sudo apt install scrcpy\n</code></pre> Running scrcpy, disabling phone screen<pre><code>scrcpy -b15M --max-size 1920 --stay-awake --turn-screen-off\n</code></pre>"},{"location":"Misc/links/","title":"Links","text":""},{"location":"Misc/links/#links-to-save","title":"Links to Save:","text":"<ul> <li>TI-Nspire Stuff</li> <li>HP_AudioBook</li> <li>Money Bar - por subscrever </li> </ul>"},{"location":"Misc/warframe/warframe/","title":"Warframe","text":""},{"location":"Misc/warframe/warframe/#framedex","title":"Framedex","text":"<p>My Framedex</p> <p>Nice Relic Info</p>"},{"location":"Misc/warframe/warframe/#shits-to-do-in-warframe","title":"Shits to do in Warframe","text":"<ul> <li> Fazer uma 1-7-7 -&gt; Best amp for eidolon</li> <li> Get a Magus Repair </li> <li> Get a Magus Melt</li> <li> Get Virtuous Shadow to lvl 5 NEED 2 MORE</li> <li> Build Volt !  </li> <li> Maxed Caliban</li> <li> Comprar o Erradicate ao Cavalero, preciso de mais 6</li> <li> Build Phenmor</li>  </ul>"},{"location":"Misc/warframe/warframe/#eidolon-hunting-solo","title":"Eidolon Hunting SOLO","text":""},{"location":"Misc/warframe/warframe/#volt-prime","title":"Volt Prime","text":""},{"location":"Misc/warframe/warframe/#zenith","title":"Zenith","text":"<p>O mod escondido \u00e9 o <code>Hellfire</code></p>"},{"location":"Programming/GitHub/","title":"GitHub","text":""},{"location":"Programming/GitHub/#token-novo","title":"Token Novo:","text":"<p>Dentro do reposit\u00f3rio local: </p> <pre><code>git remote set-url origin https://username:token@github.com/username/repository.git\n</code></pre>"},{"location":"Programming/data_types/","title":"Data types","text":""},{"location":"Programming/data_types/#data-types","title":"Data Types","text":"<p> <pre>\\[\n1 byte (B) = 8 bits\n\\]</pre>    Data Type Size Description     byte 1 byte Stores whole numbers from -128 to 127   short 2 bytes Stores whole numbers from -32,768 to 32,767   int 4 bytes Stores whole numbers from -2,147,483,648 to 2,147,483,647   long 8 bytes Stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807   float 4 bytes Stores fractional numbers. Sufficient for storing 6 to 7 decimal digits   double 8 bytes Stores fractional numbers. Sufficient for storing 15 decimal digits   boolean 1 bit Stores true or false values   char 2 bytes Stores a single character/letter or ASCII values"},{"location":"Programming/data_types/#byte","title":"Byte","text":"<p>The byte data type can store whole numbers from -128 to 127. This can be used instead of int or other integer types to save memory when you are certain that the value will be within -128 and 127.</p>"},{"location":"Programming/data_types/#short","title":"Short","text":"<p>The short data type can store whole numbers from -32768 to 32767.</p>"},{"location":"Programming/data_types/#int","title":"Int","text":"<p>The int data type can store whole numbers from -2147483648 to 2147483647. In general, the int data type is the preferred data type when we create variables with a numeric value.</p>"},{"location":"Programming/data_types/#long","title":"Long","text":"<p>The long data type can store whole numbers from -9223372036854775808 to 9223372036854775807. This is used when int is not large enough to store the value. Note that you should end the value with an \"L\" (Java):</p> <pre><code>(java)\nlong myNum = 15000000000L;\n</code></pre>"},{"location":"Programming/data_types/#floating-point-types","title":"Floating Point Types","text":"<p>You should use a floating point type whenever you need a number with a decimal, such as 9.99 or 3.14515.</p> <p>The float and double data types can store fractional numbers. Note that you should end the value with an \"f\" for floats and \"d\" for doubles:</p> <pre><code>(java)\ndouble myNum = 19.99d;\nfloat myNum = 5.75f;\n</code></pre>"},{"location":"Programming/data_types/#scientific-numbers","title":"Scientific Numbers","text":"<p>A floating point number can also be a scientific number with an \"e\" to indicate the power of 10:</p> <pre><code>float f1 = 35e3f;\n</code></pre>"},{"location":"Programming/prog_index/","title":"Prog index","text":"<p>Java Data Types</p>"},{"location":"Programming/Java/java_basics/","title":"Java basics","text":"<p>"},{"location":"Programming/Java/java_basics/#java-rules","title":"Java \"Rules\"","text":"<ul> <li>Java is case-sensitive: \"MyClass\" and \"myclass\" has different meaning.</li> <li>Every line of code that runs in Java must be inside a class.</li> <li>A class should always start with an uppercase first letter.</li> <li>The name of the java file must match the class name.</li> </ul>"},{"location":"Programming/Java/java_basics/#strings","title":"Strings","text":""},{"location":"Programming/Java/java_basics/#string-length","title":"String Length","text":"<p>Retorna o tamanho da String. <pre><code>String txt = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nSystem.out.println(\"The length of the txt string is: \" + txt.length());\n</code></pre></p>"},{"location":"Programming/Java/java_basics/#touppercase--tolowercase","title":"toUpperCase() &amp; toLowerCase()","text":"<pre><code>String txt = \"Hello World\";\nSystem.out.println(txt.toUpperCase());   // Outputs \"HELLO WORLD\"\nSystem.out.println(txt.toLowerCase());   // Outputs \"hello world\"\n</code></pre>"},{"location":"Programming/Java/java_basics/#indexof","title":"indexOf()","text":"<pre><code>String txt = \"Please locate where 'locate' occurs!\";\nSystem.out.println(txt.indexOf(\"locate\")); // Outputs 7\n</code></pre>"},{"location":"Programming/Java/java_basics/#string-concatenation","title":"String Concatenation","text":"<p>Existem 2 m\u00e9todos:  <pre><code>String firstName = \"John\";\nString lastName = \"Doe\";\nSystem.out.println(firstName + \" \" + lastName);\n</code></pre> <pre><code>String firstName = \"John \";\nString lastName = \"Doe\";\nSystem.out.println(firstName.concat(lastName));\n</code></pre> Nota: Se adicionarmos um n\u00famero e uma string, o resultado ser\u00e1 uma string concatenation. (o inteiro passa a string). <pre><code>String x = \"10\";\nint y = 20;\nString z = x + y;  // z will be 1020 (a String)\n</code></pre></p>"},{"location":"Programming/Java/java_basics/#java-math","title":"Java Math","text":"<p>    M\u00e9todo Descri\u00e7\u00e3o     <code>Math.max(x,y)</code> Retorna valor m\u00e1ximo entre x e y   <code>Math.min(x,y)</code> Retorna valor minimo entre x e y   <code>Math.sqrt(x)</code> Retorna a raiz quadrada de <code>x</code>   <code>Math.abs(x)</code> Retorna o m\u00f3dulo de <code>x</code>   <code>Math.random()</code> Retorna um numero entre 0.0 (inclusive) e 1.0"},{"location":"Programming/Java/java_basics/#short-ifelse","title":"Short If..Else","text":"<p><pre><code>variable = (condition) ? expressionTrue :  expressionFalse;\n</code></pre> <pre><code>int time = 20;\nString result = (time &lt; 18) ? \"Good day.\" : \"Good evening.\";\nSystem.out.println(result);\n</code></pre></p>"},{"location":"Programming/Java/java_basics/#for-each-loop","title":"For Each Loop","text":"<p><pre><code>for (type variableName : arrayName) {\n  // code block to be executed\n}\n</code></pre> <pre><code>String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\nfor (String i : cars) {\n  System.out.println(i);\n}\n</code></pre></p>"},{"location":"Programming/Java/java_basics/#multidimensional-arrays","title":"Multidimensional Arrays","text":"<pre><code>class apples{\n    public static void main(String[] args) {\n        int firstarray[][]={{8,9,10,11},{12,13,14,15}};\n        int secondarray[][]={{30,31,32,33},{34},{35,36}}\n\n        System.out.println(\"This is the first array\");\n        display(firstarray);\n        System.out.println(\"This is the second array\");\n        display(secondarray);\n    }\n    //cicle through the array\n    public static void display(int x[][] /*receives the multidimensional array like this*/) {\n        for(int row=0; row &lt; x.length; row++){ \n            //x.length gives the number the arrays the MD array has.\n            // firstarray.length=2, second array.length=3\n            //ou seja, isto diz quantas linhas \u00e9 que o MD array tem\n            for(int col=0; col&lt;x[row].length; col++){\n                //se fizermos firstarray[0].length = 4, logo temos\n                //4 colunas olhando para a primeira linha do MD Array\n                System.out.print(x[row][col]+\"\\t\");\n            }\n            System.out.println(); //new line (mete um \\n basically)\n        }\n    }\n}\n</code></pre>"},{"location":"Programming/Java/java_basics/#classes-and-objects","title":"Classes and Objects","text":"<p>Classes and objects are the two main aspects of object-oriented programming.</p>  <p>So, a class is a template for objects, and an object is an instance of a class.</p> <p>When the individual objects are created, they inherit all the variables and methods from the class.</p> <p>"},{"location":"Programming/Java/java_basics/#class","title":"Class","text":"<p>Class named  \"Main\" with a variable x:</p> <pre><code>public class Main {\n  int x = 5;\n}\n</code></pre> <p>"},{"location":"Programming/Java/java_basics/#object","title":"Object","text":"<p>Um objeto \u00e9 criado a partir de uma classe. Neste caso vamos criar um objeto da classe Main chamado myObj.</p> <p><pre><code>public class Main {\n  int x = 5;\n\n  public static void main(String[] args) {\n    Main myObj1 = new Main();  // Object 1\n    Main myObj2 = new Main();  // Object 2\n    System.out.println(myObj1.x);\n    System.out.println(myObj2.x);\n  }\n}\n</code></pre> Podem ser criados mais do que um objeto da mesma classe.</p>"},{"location":"Programming/Java/java_basics/#multiple-classes","title":"Multiple Classes","text":"<p>\u00c9 poss\u00edvel criar uma classe a aceder a esta noutra classe. Isto \u00e9 \u00fatil em termos de organizar as classes.</p> <p>Exemplo: Uma classe tem todos os atributos e m\u00e9todos e outra tem a <code>main()</code>, onde est\u00e1 o c\u00f3digo a ser executado.</p> <p><pre><code>Main.java\npublic class Main {\n  int x = 5;\n}   \n</code></pre> <pre><code>Second.java\nclass Second {\n  public static void main(String[] args) {\n    Main myObj = new Main();\n    System.out.println(myObj.x);\n  }\n}\n</code></pre></p>"},{"location":"Programming/Java/java_basics/#java-attributes","title":"Java Attributes","text":"<p>As \"vari\u00e1veis\" das classes, na verdade, s\u00e3o atributos das classes. </p> <p>Por exemplo, uma classe, <code>Main()</code>, que tem dois atributos, <code>x</code> e <code>y</code>:</p> <pre><code>public class Main {\n  int x = 5;\n  int y = 3;\n}\n</code></pre>"},{"location":"Programming/Java/java_basics/#accessing-attributes","title":"Accessing Attributes","text":"<p>Podemos aceder a atributos das classes, primeiramente criando um objeto da mesma e depois usando o operador <code>.</code>. Por exemplo, aqui estamos a aceder ao atributo <code>x</code> do objeto <code>myObj</code> da classe <code>Main</code>.</p> <pre><code>public class Main {\n  int x = 5;\n\n  public static void main(String[] args) {\n    Main myObj = new Main();\n    System.out.println(myObj.x);\n  }\n}\n</code></pre>"},{"location":"Programming/Java/java_basics/#modifying-attributes","title":"Modifying Attributes","text":"<p><pre><code>public class Main {\n  int x;\n\n  public static void main(String[] args) {\n    Main myObj = new Main();\n    myObj.x = 40;\n    System.out.println(myObj.x);\n  }\n}\n</code></pre> Caso <code>x</code> j\u00e1 tivesse um valor, por exemplo <code>int x = 5;</code> este seria reescrito com o valor 40.</p> <p>SE n\u00e3o quisermos que o valor seja edit\u00e1vel ent\u00e3o declaramos o atributo como <code>final</code>: </p> <pre><code>final int x = 10;\n</code></pre>"},{"location":"Programming/Java/java_basics/#multiple-objects-and-attributes","title":"Multiple Objects and Attributes","text":"<p>Se criarmos v\u00e1rios objetos de uma classe, os valores dos seus atributos n\u00e3o s\u00e3o partilhados, s\u00e3o independentes, logo podemos mudar os atributos de um objeto sem alterar os dos restantes.</p> <pre><code>public class Main {\n  int x = 5;\n\n  public static void main(String[] args) {\n    Main myObj1 = new Main();  // Object 1\n    Main myObj2 = new Main();  // Object 2\n    myObj2.x = 25;\n    System.out.println(myObj1.x);  // Outputs 5\n    System.out.println(myObj2.x);  // Outputs 25\n  }\n}\n ```\n\n### Multiple Attributes\n\nPodem ser criados tantos atributos quanto quisermos.\n\n```java\npublic class Main {\n  String fname = \"John\";\n  String lname = \"Doe\";\n  int age = 24;\n\n  public static void main(String[] args) {\n    Main myObj = new Main();\n    System.out.println(\"Name: \" + myObj.fname + \" \" + myObj.lname);\n    System.out.println(\"Age: \" + myObj.age);\n  }\n}\n</code></pre>"},{"location":"Programming/Java/java_basics/#java-methods","title":"Java Methods","text":"Quote <p>A method is a block of code which only runs when it is called. You can pass data, known as parameters, into a method. Methods are used to perform certain actions, and they are also known as functions. Why use methods? To reuse code: define the code once, and use it many times.</p>  <p>Os m\u00e9todos s\u00e3o declarados dentro das classes. Kinda like fun\u00e7\u00f5es em C.</p> M\u00e9todo em Java<pre><code>public class Main {\n  static void myMethod() {\n    System.out.println(\"I just got executed!\");\n  }\n\n  public static void main(String[] args) {\n    myMethod();\n  }\n}\n\n// Outputs \"I just got executed!\"\n</code></pre>"},{"location":"Programming/Java/java_basics/#method-parameters","title":"Method Parameters","text":"<p>\u00c9 poss\u00edvel passar par\u00e2metros (argumentos) para m\u00e9todos, isto faz-se facilmente inserindo o par\u00e2metro a passar nos <code>()</code> do m\u00e9todo:</p>  <p>Example</p>  Passagem de Par\u00e2metros<pre><code>        public class Main {\n            static void myMethod(String fname) {\n                System.out.println(fname + \" Refsnes\");\n            }\n\n            public static void main(String[] args) {\n                myMethod(\"Liam\");\n                myMethod(\"Jenny\");\n                myMethod(\"Anja\");\n            }\n        }\n        // Liam Refsnes\n        // Jenny Refsnes\n        // Anja Refsnes\n</code></pre>"},{"location":"Programming/Java/java_index/","title":"Java index","text":"<p>   <p> <p>Java Basics</p> <p>Java OOP</p>  <p> <p>Slides da Prof</p>"},{"location":"Programming/Java/java_oop/","title":"Java oop","text":"<p>Quote<p>OOP stands for Object-Oriented Programming.</p> <p>Procedural programming is about writing procedures or methods that perform operations on the data, while object-oriented programming is about creating objects that contain both data and methods.</p> <p>Object-oriented programming has several advantages over procedural programming:</p> <p>OOP is faster and easier to execute OOP provides a clear structure for the programs OOP helps to keep the Java code DRY \"Don't Repeat Yourself\", and makes the code easier to maintain, modify and debug OOP makes it possible to create full reusable applications with less code and shorter development time</p> </p>   Tip <p>The \"Don't Repeat Yourself\" (DRY) principle is about reducing the repetition of code. You should extract out the codes that are common for the application, and place them at a single place and reuse them instead of repeating it.</p>"},{"location":"Programming/Java/java_oop/#static-vs-non-static","title":"Static VS Non-Static","text":"<ul> <li>Static: N\u00e3o precisa de um objeto para chamar o m\u00e9todo.</li> <li>Non-Static: Precisa de ser chamado por um objeto, posteriormente criado.</li> </ul> <pre><code>public class Main {\n  // Static method\n  static void myStaticMethod() {\n    System.out.println(\"Static methods can be called without creating objects\");\n  }\n\n  // Public method\n  public void myPublicMethod() {\n    System.out.println(\"Public methods must be called by creating objects\");\n  }\n\n  // Main method\n  public static void main(String[] args) {\n    myStaticMethod(); // Call the static method\n    // myPublicMethod(); This would compile an error\n\n    Main myObj = new Main(); // Create an object of Main\n    myObj.myPublicMethod(); // Call the public method on the object\n  }\n}\n</code></pre>"},{"location":"Programming/Java/java_oop/#java-constructors","title":"Java Constructors","text":"<p>Um consctructor \u00e9 usado para inicializar objetos. Ou seja, quando criamos um objeto com: </p> <p><pre><code>Main myObj = new Main();\n</code></pre> Temos tamb\u00e9m que criar o construtor para este, exemplo:</p> <pre><code>  // Create a class constructor for the Main class\n  public Main() {\n    x = 5;  // Set the initial value for the class attribute x\n  }\n</code></pre>  <p>Warning</p> <p>Note that the constructor name must match the class name, and it cannot have a return type (like void).</p> <p>Also note that the constructor is called when the object is created.</p> <p>All classes have constructors by default: if you do not create a class constructor yourself, Java creates one for you. However, then you are not able to set initial values for object attributes.</p>   <p>Example</p>  <pre><code>public class Main {\n  int modelYear;\n  String modelName;\n\n  public Main(int year, String name) {\n    modelYear = year;\n    modelName = name;\n  }\n\n  public static void main(String[] args) {\n    Main myCar = new Main(1969, \"Mustang\");\n    System.out.println(myCar.modelYear + \" \" + myCar.modelName);\n  }\n}\n\n// Outputs 1969 Mustang\n</code></pre>"},{"location":"Programming/Java/java_oop/#java-modifiers","title":"Java Modifiers","text":"<ul> <li>Access Modifiers - controls the access level</li> <li>Non-Access Modifiers - do not control access level, but provides other functionality</li> </ul>"},{"location":"Programming/Java/java_oop/#access-modifiers","title":"Access Modifiers","text":"<p>Para classes:</p>    Modificador Descri\u00e7\u00e3o     <code>public</code> A class \u00e9 alcan\u00e7\u00e1vel por todas as classes   default A class s\u00f3 \u00e9 alcan\u00e7\u00e1vel por classes que estejam no mesmo package    <p>Para atributos, m\u00e9todos e construtores: </p>    Modificador Descri\u00e7\u00e3o     <code>public</code> O c\u00f3digo \u00e9 alcan\u00e7avel por todas as classes   <code>private</code> O c\u00f3digo s\u00f3 \u00e9 acedido dentro da classe que o declarou   default O c\u00f3digo \u00e9 alcan\u00e7avel dentro do mesmo package   <code>protected</code> O c\u00f3digo \u00e9 alcan\u00e7\u00e1vel dentro do mesmo package e subclasses    <p>"},{"location":"Programming/Java/java_oop/#non-access-modifiers","title":"Non-Access Modifiers","text":"<p>Para classes:</p>    Modificador Descri\u00e7\u00e3o     <code>final</code> A class n\u00e3o pode ser herdada por outras classes, ou seja, se fizermos <code>extend</code> dessa classe vai dar erro.   <code>abstract</code> Uma classe que n\u00e3o pode criar objetos.    <p>Para atributos, m\u00e9todos e construtores: </p>    Modificador Descri\u00e7\u00e3o     <code>final</code> Atributos e m\u00e9todos n\u00e3o podem ser modificados/overriden   <code>static</code> Atributos e m\u00e9todos pertencem \u00e0 class e n\u00e3o ao objeto   <code>abstract</code> S\u00f3 podem ser usados numa class do tipo <code>abstract</code>. S\u00f3 podem ser usados em m\u00e9todos. O m\u00e9todo n\u00e3o tem \"corpo\", este \u00e9 definido nas subclasses da class <code>abstract</code>.    <p>Existem ainda <code>transient</code>, <code>syncronized</code> e <code>volatile</code>, por\u00e9m isto n\u00e3o foi muito falado em aula nem usado em nenhum exerc\u00edcio/lab e usam threads, coisa que n\u00e3o foi falada em POO tb.</p>  Os 3 fields mencionados acima    Modificador Descri\u00e7\u00e3o     <code>transient</code> Attributes and methods are skipped when serializing the object containing them   <code>synchronized</code> Methods can only be accessed by one thread at a time   <code>volatile</code> The value of an attribute is not cached thread-locally, and is always read from the \"main memory\""},{"location":"Programming/Java/java_oop/#exemplos","title":"Exemplos","text":"Final <pre><code>public class Main {\nfinal int x = 10;\nfinal double PI = 3.14;\n\npublic static void main(String[] args) {\n    Main myObj = new Main();\n    myObj.x = 50; // will generate an error: cannot assign a value to a final variable\n    myObj.PI = 25; // will generate an error: cannot assign a value to a final variable\n    System.out.println(myObj.x);\n}\n}\n</code></pre>   Static <pre><code>public class Main {\n// Static method\nstatic void myStaticMethod() {\n    System.out.println(\"Static methods can be called without creating objects\");\n}\n\n// Public method\npublic void myPublicMethod() {\n    System.out.println(\"Public methods must be called by creating objects\");\n}\n\n// Main method\npublic static void main(String[ ] args) {\n    myStaticMethod(); // Call the static method\n    // myPublicMethod(); This would output an error\n\n    Main myObj = new Main(); // Create an object of Main\n    myObj.myPublicMethod(); // Call the public method\n}\n}\n</code></pre>   Abstract <pre><code>// Code from filename: Main.java\n// abstract class\nabstract class Main {\npublic String fname = \"John\";\npublic int age = 24;\npublic abstract void study(); // abstract method\n}\n\n// Subclass (inherit from Main)\nclass Student extends Main {\npublic int graduationYear = 2018;\npublic void study() { // the body of the abstract method is provided here\n    System.out.println(\"Studying all day long\");\n}\n}\n// End code from filename: Main.java\n\n// Code from filename: Second.java\nclass Second {\npublic static void main(String[] args) {\n    // create an object of the Student class (which inherits attributes and methods from Main)\n    Student myObj = new Student();\n\n    System.out.println(\"Name: \" + myObj.fname);\n    System.out.println(\"Age: \" + myObj.age);\n    System.out.println(\"Graduation Year: \" + myObj.graduationYear);\n    myObj.study(); // call abstract method\n}\n}\n</code></pre>"},{"location":"Programming/Java/java_oop/#encapsulation","title":"Encapsulation","text":"<p>Encapsulation serve para esconder \"sensitive\" data ao utilizador. Para isto devemos: </p> <ul> <li> Declarar as vari\u00e1veis/atributos da classe <code>private</code>.</li> <li> Aceder e atualizar valores de vari\u00e1veis <code>private</code> recorrendo aos m\u00e9todos <code>get()</code> e <code>set()</code>.</li> </ul>"},{"location":"Programming/Java/java_oop/#get-and-set","title":"Get and Set","text":"<ul> <li>Getter - retorna o valor de um atributo/vari\u00e1vel sem mudar o valor.</li> <li>Setter - atualiza/muda o valor de um atributo/vari\u00e1vel.</li> </ul> person.javamain.java (erro)main.java (correct)   <pre><code>public class Person {\nprivate String name; // private = restricted access\n\n// Getter\npublic String getName() {\n    return name;\n}\n\n// Setter\npublic void setName(String newName) {\n    this.name = newName;\n}\n}\n</code></pre>   <pre><code>public class Main {\npublic static void main(String[] args) {\n    Person myObj = new Person();\n    myObj.name = \"John\";  //error (1)\n    System.out.println(myObj.name); // error \n    //as the name variable is declared as private, we cannot access it from outside this class  \n}\n}\n</code></pre>   <pre><code>public class Main {\npublic static void main(String[] args) {\n    Person myObj = new Person();\n    myObj.setName(\"John\"); // Set the value of the name variable to \"John\"\n    System.out.println(myObj.getName());\n}\n}\n\n// Outputs \"John\"\n</code></pre>     Porqu\u00ea Encapsulation? <ul> <li>Better control of class attributes and methods</li> <li>Class attributes can be made read-only (if you only use the get method), or write-only (if you only use the set method)</li> <li>Flexible: the programmer can change one part of the code without affecting other parts</li> <li>Increased security of data</li> </ul>"},{"location":"Programming/Java/java_oop/#java-packages","title":"Java Packages","text":"<p>Um package em Java \u00e9 utilizado para \"guardar\" classes semelhantes no mesmo s\u00edtio. </p> <p>Existem packeges pr\u00e9-feitos pela Oracle, que podem ser encontrados aqui.</p> <p>Podemos importar classes especificas ou o package inteiro: <pre><code>import package.name.Class;   // Import a single class\nimport package.name.*;   // Import the whole package\nimport java.util.Scanner;\n</code></pre> No exemplo acima <code>java.util</code> \u00e9 o package e <code>Scanner</code> \u00e9 a class.</p>"},{"location":"Programming/Java/java_oop/#creating-a-package","title":"Creating a package","text":"<p><pre><code>\u2514\u2500\u2500 root\n  \u2514\u2500\u2500 mypack\n    \u2514\u2500\u2500 MyPackageClass.java\n</code></pre> MyPackageClass.java<pre><code>package mypack;\nclass MyPackageClass {\n  public static void main(String[] args) {\n    System.out.println(\"This is my package!\");\n  }\n}\n</code></pre></p>"},{"location":"Programming/Java/java_oop/#compiling-with-a-package","title":"Compiling with a package","text":"<ol> <li>Compilar o .java</li> <li>Compilar o package</li> <li>Correr</li> </ol> <p>Ou seja:</p> <ol> <li><code>C:\\Users\\Your Name&gt;javac MyPackageClass.java</code></li> <li><code>C:\\Users\\Your Name&gt;javac -d . MyPackageClass.java</code></li> <li><code>C:\\Users\\Your Name&gt;java mypack.MyPackageClass</code></li> </ol> <p>O output seria: <code>This is my package!</code>.</p>"},{"location":"Programming/Java/java_oop/#java-inheritance","title":"Java Inheritance","text":"<p>Em Java \u00e9 poss\u00edvel que uma classe herde atributos e m\u00e9todos de outra, criando assim uma hierarquia.</p> <p>Podemos separar a hierarquia em dois tipos de classes: * subclass - class que herda os atributos e m\u00e9todos * superclass - class d\u00e1 heran\u00e7a</p> <p>Para uma classe herdar de outra usa-se o <code>extends</code>.</p>  Heran\u00e7a <pre><code>class Vehicle {\nprotected String brand = \"Ford\";        // Vehicle attribute\npublic void honk() {                    // Vehicle method\n    System.out.println(\"Tuut, tuut!\");\n}\n}\n\nclass Car extends Vehicle {\nprivate String modelName = \"Mustang\";    // Car attribute\npublic static void main(String[] args) {\n\n    // Create a myCar object\n    Car myCar = new Car();\n\n    // Call the honk() method (from the Vehicle class) on the myCar object\n    myCar.honk();\n\n    // Display the value of the brand attribute (from the Vehicle class) and the value of the modelName from the Car class\n    System.out.println(myCar.brand + \" \" + myCar.modelName);\n}\n}\n</code></pre>"},{"location":"Programming/Java/java_oop/#java-polymorphism","title":"Java Polymorphism","text":"<p>O polimorfismo acontece quando temos v\u00e1rias classes relacionadas umas com as outras hierarquicamente. </p> <p>Por exemplo, uma superclass chamada <code>Animal</code> que tem subclasses como <code>Porco</code>, <code>Gato</code>, etc. Todos os animais t\u00eam um <code>animalSound()</code> distinto entre eles.</p> Polimorfismo<pre><code>class Animal {\n  public void animalSound() {\n    System.out.println(\"The animal makes a sound\");\n  }\n}\n\nclass Pig extends Animal {\n  public void animalSound() {\n    System.out.println(\"The pig says: wee wee\");\n  }\n}\n\nclass Dog extends Animal {\n  public void animalSound() {\n    System.out.println(\"The dog says: bow wow\");\n  }\n}\n\nclass Main {\n  public static void main(String[] args) {\n    Animal myAnimal = new Animal();  // Create a Animal object\n    Animal myPig = new Pig();  // Create a Pig object\n    Animal myDog = new Dog();  // Create a Dog object\n    myAnimal.animalSound();\n    myPig.animalSound();\n    myDog.animalSound();\n  }\n}\n</code></pre>"},{"location":"Programming/Java/java_oop/#java-abstraction","title":"Java Abstraction","text":"<p>Basicamente \u00e9 a cena das classes poderem levar o modificador <code>abstract</code>.</p> <p>Por exemplo, um ve\u00edculo \u00e9 uma \"coisa\" abstrata, mas todos os ve\u00edculos t\u00eam por exemplo uma <code>velocidadeMedia()</code> etc.</p> <pre><code>// Abstract class\nabstract class Animal {\n  // Abstract method (does not have a body)\n  public abstract void animalSound();\n  // Regular method\n  public void sleep() {\n    System.out.println(\"Zzz\");\n  }\n}\n\n// Subclass (inherit from Animal)\nclass Pig extends Animal {\n  public void animalSound() {\n    // The body of animalSound() is provided here\n    System.out.println(\"The pig says: wee wee\");\n  }\n}\n\nclass Main {\n  public static void main(String[] args) {\n    Pig myPig = new Pig(); // Create a Pig object\n    myPig.animalSound();\n    myPig.sleep();\n  }\n}\n</code></pre>"},{"location":"Programming/Java/java_oop/#java-interfaces","title":"Java Interfaces","text":"<p>Usar interfaces \u00e9 outra maneira de criar abstra\u00e7\u00e3o em Java. Uma interface \u00e9 uma classe \"completely abstract\" usada para agrupar m\u00e9todos sem corpo.</p>  Interface Interface<pre><code>// interface\ninterface Animal {\npublic void animalSound(); // interface method (does not have a body)\npublic void run(); // interface method (does not have a body)\n}\n</code></pre>  <p>Para uma classe aceder aos m\u00e9todos de uma interface usa-se o <code>implements</code>.</p>  <code>implements</code> <pre><code>// Interface\ninterface Animal {\npublic void animalSound(); // interface method (does not have a body)\npublic void sleep(); // interface method (does not have a body)\n}\n\n// Pig \"implements\" the Animal interface\nclass Pig implements Animal {\npublic void animalSound() {\n    // The body of animalSound() is provided here\n    System.out.println(\"The pig says: wee wee\");\n}\npublic void sleep() {\n    // The body of sleep() is provided here\n    System.out.println(\"Zzz\");\n}\n}\n\nclass Main {\npublic static void main(String[] args) {\n    Pig myPig = new Pig();  // Create a Pig object\n    myPig.animalSound();\n    myPig.sleep();\n}\n}\n</code></pre>   Note  <ul> <li>Interfaces n\u00e3o podem criar objetos, uma vez que s\u00e3o classes <code>abstract</code>.</li> <li>Os m\u00e9todos das interfaces n\u00e3o t\u00eam corpo, este \u00e9 posteriormente definido pelas classes que fazem o <code>implements</code> da interface.</li> <li>Os m\u00e9todos de uma interface s\u00e3o <code>public</code> e <code>abstract</code>.</li> <li>Os atributos de uma interface s\u00e3o <code>public</code>, <code>static</code> e <code>final</code>.</li> <li>Uma interface n\u00e3o tem constructor, uma vez que n\u00e3o cria objetos.</li> </ul>  Exemplo com m\u00faltiplas interfaces <pre><code>interface FirstInterface {\npublic void myMethod(); // interface method\n}\n\ninterface SecondInterface {\npublic void myOtherMethod(); // interface method\n}\n\nclass DemoClass implements FirstInterface, SecondInterface {\npublic void myMethod() {\n    System.out.println(\"Some text..\");\n}\npublic void myOtherMethod() {\n    System.out.println(\"Some other text...\");\n}\n}\n\nclass Main {\npublic static void main(String[] args) {\n    DemoClass myObj = new DemoClass();\n    myObj.myMethod();\n    myObj.myOtherMethod();\n}\n}\n</code></pre>"},{"location":"Programming/Java/java_oop/#enum","title":"Enum","text":"Enum example<pre><code>public class Main {\n  enum Level {\n    LOW,\n    MEDIUM,\n    HIGH\n  }\n\n  public static void main(String[] args) {\n    Level myVar = Level.MEDIUM; \n    System.out.println(myVar);\n  }\n}\n</code></pre>  <p>Warning</p> <p>Os valores de um <code>enum</code> s\u00e3o constantes e imut\u00e1veis, como se fossem definidos com o modificador <code>final</code>.</p>   Switch-Case Enum <pre><code>enum Level {\nLOW,\nMEDIUM,\nHIGH\n}\n\npublic class Main {\npublic static void main(String[] args) {\n    Level myVar = Level.MEDIUM;\n\n    switch(myVar) {\n    case LOW:\n        System.out.println(\"Low level\");\n        break;\n    case MEDIUM:\n        System.out.println(\"Medium level\");\n        break;\n    case HIGH:\n        System.out.println(\"High level\");\n        break;\n    }\n}\n}\n</code></pre>   For each Enum <pre><code>for (Level myVar : Level.values()) {\n    System.out.println(myVar);\n}\n</code></pre>"},{"location":"Programming/Java/java_oop/#user-input","title":"User Input","text":"User Input <pre><code>    import java.util.Scanner;\n\n    class Main {\n    public static void main(String[] args) {\n        Scanner myObj = new Scanner(System.in);\n\n        System.out.println(\"Enter name, age and salary:\");\n\n        // String input\n        String name = myObj.nextLine();\n\n        // Numerical input\n        int age = myObj.nextInt();\n        double salary = myObj.nextDouble();\n\n        // Output input by user\n        System.out.println(\"Name: \" + name);\n        System.out.println(\"Age: \" + age);\n        System.out.println(\"Salary: \" + salary);\n    }\n    }\n</code></pre>"},{"location":"Programming/Java/java_oop/#arraylist","title":"ArrayList","text":"<p>Uma <code>ArrayList</code> \u00e9 um array mas \"resizable\" que pertence ao package java.util.</p> <p>A diferen\u00e7a entre um array dito normal e um ArrayList \u00e9 q o tamanho de um array normal n\u00e3o pode ser modificado, se queremos meter mais um elemento no array temos de fazer um novo, copiar o array antigo e meter outro elemento na ultima posi\u00e7\u00e3o por exemplo. No caso do ArrayList podemos adicionar ou remover elementos sem problema.</p>  <p>A syntax \u00e9 diferente que num array normal!</p>  Uma `ArrayList` que vai guardar strings<pre><code>import java.util.ArrayList; // import the ArrayList class\n\nArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;(); // Create an ArrayList object\n</code></pre>"},{"location":"Programming/Java/java_oop/#adicionar-elementos","title":"Adicionar elementos","text":"add( ) <pre><code>import java.util.ArrayList;\n\npublic class Main {\n  public static void main(String[] args) {\n    ArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;();\n    cars.add(\"Volvo\");\n    cars.add(\"BMW\");\n    cars.add(\"Ford\");\n    cars.add(\"Mazda\");\n    System.out.println(cars);\n  }\n}\n</code></pre>"},{"location":"Programming/Java/java_oop/#aceder-a-um-elemento-por-index","title":"Aceder a um elemento por index","text":"get( ) <p><code>cars.get(0);</code></p>"},{"location":"Programming/Java/java_oop/#modificar-elementos-numa-arraylist","title":"Modificar elementos numa ArrayList","text":"set( ) <p><code>cars.set(0, \"Opel\");</code></p>"},{"location":"Programming/Java/java_oop/#remover-um-elemento-da-arraylist","title":"Remover um elemento da ArrayList","text":"remove( ) <p><code>cars.remove(0);</code></p>"},{"location":"Programming/Java/java_oop/#remover-todos-os-elementos-da-arraylist","title":"Remover todos os elementos da ArrayList","text":"clear( ) <p><code>cars.clear();</code> </p>"},{"location":"Programming/Java/java_oop/#tamanho-de-uma-arraylist","title":"Tamanho de uma ArrayList","text":"<p><code>cars.size()</code></p>"},{"location":"Programming/Java/java_oop/#loop-de-uma-arraylist","title":"Loop de uma ArrayList","text":"For<pre><code>public class Main {\n  public static void main(String[] args) {\n    ArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;();\n    cars.add(\"Volvo\");\n    cars.add(\"BMW\");\n    cars.add(\"Ford\");\n    cars.add(\"Mazda\");\n    for (int i = 0; i &lt; cars.size(); i++) {\n      System.out.println(cars.get(i));\n    }\n  }\n}\n</code></pre> <p>Tamb\u00e9m se pode usar o For-Each</p> For-Each<pre><code>public class Main {\n  public static void main(String[] args) {\n    ArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;();\n    cars.add(\"Volvo\");\n    cars.add(\"BMW\");\n    cars.add(\"Ford\");\n    cars.add(\"Mazda\");\n    for (String i : cars) {\n      System.out.println(i);\n    }\n  }\n}\n</code></pre>"},{"location":"Programming/Java/java_oop/#sort-arraylist","title":"Sort ArrayList","text":"<p>Existe uma class no package java.util chamada <code>Collections</code> que inclui a funcionalidade <code>sort()</code> e que pode ser usada numa ArrayList, ordenando-a alfabeticamente ou numericamente.</p>  Sort( ) Sort alfabeticamente<pre><code>import java.util.ArrayList;\nimport java.util.Collections;  // Import the Collections class\n\npublic class Main {\n  public static void main(String[] args) {\n    ArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;();\n    cars.add(\"Volvo\");\n    cars.add(\"BMW\");\n    cars.add(\"Ford\");\n    cars.add(\"Mazda\");\n    Collections.sort(cars);  // Sort cars\n    for (String i : cars) {\n      System.out.println(i);\n    }\n  }\n}\n</code></pre> Sort Numericamente<pre><code>import java.util.ArrayList;\nimport java.util.Collections;  // Import the Collections class\n\npublic class Main {\n  public static void main(String[] args) {\n    ArrayList&lt;Integer&gt; myNumbers = new ArrayList&lt;Integer&gt;();\n    myNumbers.add(33);\n    myNumbers.add(15);\n    myNumbers.add(20);\n    myNumbers.add(34);\n    myNumbers.add(8);\n    myNumbers.add(12);\n\n    Collections.sort(myNumbers);  // Sort myNumbers\n\n    for (int i : myNumbers) {\n      System.out.println(i);\n    }\n  }\n}\n</code></pre>"},{"location":"Programming/Java/java_oop/#linkedlist","title":"LinkedList","text":"<p>Uma <code>LinkedList</code> \u00e9 muito parecida a uma <code>ArrayList</code> (at\u00e9 porque usam a mesma interface <code>List</code>) porem s\u00e3o construidas de formas muito diferentes.</p> <p>Uma <code>ArrayList</code> tem um array normal dentro dela.</p> <p>Uma <code>LinkedList</code> guarda os seus item dentro de \"containers\". A List tem um link para o primeiro container, e cada container tem um link para o pr\u00f3ximo. Tipo nodes em AED. </p> <p>Normalmente a <code>ArrayList</code> \u00e9 mais eficiente uma vez que o seu uso foca-se mais em aceder a index's random da lista, mas a <code>LinkedList</code> tem m\u00e9todos mais eficientes para alguns casos:</p>    M\u00e9todo Descri\u00e7\u00e3o     addFirst() Adiciona um item ao inicio da lista   addLast() Adiciona um item ao fim da lista   removeFirst() Remove um item do inicio da lista   removeLast() Remove um item do fim da lista   getFirst() Obt\u00e9m o primeiro item da lista   getLast() Obt\u00e9m o ultimo item da lista    <p>!!!* tip \"Quando usar?\"     Usa-se a <code>ArrayList</code> para guardar e aceder a dados, e a <code>LinkedList</code> para manipular dados.</p>  Example <pre><code>import java.util.LinkedList;\n\npublic class Main {\n  public static void main(String[] args) {\n    LinkedList&lt;String&gt; cars = new LinkedList&lt;String&gt;();\n    cars.add(\"Volvo\");\n    cars.add(\"BMW\");\n    cars.add(\"Ford\");\n    cars.add(\"Mazda\");\n    \n    // Use getLast() to display the last item in the list\n    System.out.println(cars.getFirst()); //Output: Volvo\n    cars.addFirst(\"Hola\");\n    System.out.println(cars.getFirst()); //Output: Hola\n  }\n}\n</code></pre>"},{"location":"Programming/Linux/Commands/","title":"Commands","text":""},{"location":"Programming/Linux/Commands/#useful-commands","title":"Useful Commands:","text":"<code>neofetch</code> <p><code>neofetch</code> - display system info through a short terminal command</p>  <p>So, by default Neofetch will show you the following list of items:</p> <ul> <li>Name of the operating system</li> <li>Name and model of the laptop</li> <li>Kernel version</li> <li>Uptime (how long the system has been running)</li> <li>Total number of packages (installed by default and other)</li> <li>Shell and its version</li> <li>Screen resolution</li> <li>DE (desktop environment)</li> <li>WM (window manager)</li> <li>Theme of the window manager</li> <li>Current system theme</li> <li>System icons</li> <li>Terminal</li> <li>CPU details</li> <li>GPU details</li> <li>System memory (RAM)</li> </ul>"},{"location":"Programming/Linux/Exploits/","title":"Exploits","text":""},{"location":"Programming/Linux/Exploits/#kernel-version-exploit","title":"Kernel Version Exploit","text":"<p>O comando <code>uname</code> retorna informa\u00e7\u00f5es do sistema: </p>  <p>Caso tenhamos acesso ao computador da v\u00edtima podemos saber qual \u00e9 a vers\u00e3o do seu kernel usando <code>uname -r</code> e com uma pesquisa no google do tipo \" exploit\" conseguimos facilmente se existe alguma fragilidade nessa vers\u00e3o que nos possa, por exemplo, fornecer acesso root."},{"location":"Programming/Linux/Introdu%C3%A7%C3%A3o/","title":"Introdu\u00e7\u00e3o","text":""},{"location":"Programming/Linux/Introdu%C3%A7%C3%A3o/#introdu\u00e7\u00e3o","title":"Introdu\u00e7\u00e3o","text":"<p>Nesta p\u00e1gina bla bla bla linux intro fancy </p>"},{"location":"Programming/Linux/Introdu%C3%A7%C3%A3o/#hist\u00f3ria-e-curiosidades-do-linux","title":"Hist\u00f3ria e curiosidades do Linux:","text":"<p>No in\u00edcio, o Linux era um projeto pessoal iniciado em 1991 por um estudante finland\u00eas chamado Linus Torvalds. O seu objetivo era criar um kernel novo para um sistema operacional open-source. Ao longo dos anos, o kernel Linux passou de um pequeno n\u00famero de arquivos escritos em C para a vers\u00e3o mais recente com mais de 23 milh\u00f5es de linhas de c\u00f3digo fonte (exclu\u00eddos os coment\u00e1rios). </p> <p>O Linux est\u00e1 dispon\u00edvel em mais de 600 distribui\u00e7\u00f5es (ou \"distros\"). Alguns dos mais populares e conhecidos s\u00e3o Ubuntu, Debian, Fedora, OpenSUSE, Elementary, Manjaro, Gentoo Linux, RedHat e Linux Mint.</p> <p>O Linux \u00e9 considerado mais seguro comparativamente a outros sistemas operativos uma vez que \u00e9 menos suscet\u00edvel a malware que o Windows e recebe updates frequentemente. Em contrapartida o Linux n\u00e3o tem tantos hardware drivers como o Windows. </p>"},{"location":"Programming/Linux/Introdu%C3%A7%C3%A3o/#filosofia","title":"Filosofia","text":"<p>O Linux tem 5 princ\u00edpios core:</p>    Principio Descris\u00e3o     Tudo \u00e9 um ficheiro Todos os arquivos de configura\u00e7\u00e3o dos v\u00e1rios servi\u00e7os executados no sistema operacional Linux s\u00e3o armazenados em um ou mais arquivos de texto.   Programas pequenos e de prop\u00f3sito \u00fanico O Linux oferece muitas ferramentas diferentes, que podem ser combinadas para trabalhar em conjunto.   Capacidade de encadear programas para executar tarefas complexas A integra\u00e7\u00e3o e combina\u00e7\u00e3o de diferentes ferramentas permite-nos realizar muitas tarefas grandes e complexas, como processar ou filtrar resultados de dados espec\u00edficos   Evita user interfaces O Linux est\u00e1 desenhado para trabalhar principalmente atrav\u00e9s do terminal   Configura\u00e7\u00f5es s\u00e3o guardadas em ficheiros de texto Um exemplo deste tipo de arquivo \u00e9 o /etc/passwd, que armazena configura\u00e7\u00f5es de users do sistema."},{"location":"Programming/Linux/Introdu%C3%A7%C3%A3o/#arquitetura-linux","title":"Arquitetura Linux","text":"<p>O SO Linux pode ser repartido nas seguintes camadas: </p>"},{"location":"Programming/Linux/Introdu%C3%A7%C3%A3o/#filesystem-hierarchy-standard--fhs","title":"Filesystem Hierarchy Standard  (FHS)","text":"<p>A estrutura Linux assemelha-se a uma \"\u00e1rvore hier\u00e1rquica\": </p>"},{"location":"Programming/Linux/SSH/","title":"SSH","text":""},{"location":"Programming/Linux/SSH/#ssh-secure-shell","title":"SSH (Secure Shell)","text":"<p>SSH \u00e9 um protocolo que permite aceder e executar comandos remotamente. Em sistemas baseados em UNIX, como Linux, a funcionalidade SSH vem previamente instalada.</p>"},{"location":"Programming/Linux/Terminal/","title":"Terminal","text":""},{"location":"Programming/Linux/Terminal/#formato-do-terminal","title":"Formato do terminal","text":"<p><code>&lt;username&gt;@&lt;hostname&gt;&lt;current working directory&gt;$</code> </p>"},{"location":"Programming/Linux/Terminal/#home-dir--root-dir","title":"Home dir &amp; Root dir","text":"<p>Se estivermos na dir <code>/home</code> a <code>&lt;current working directory&gt;</code> vai ter um <code>~</code> \u00e0 frente. Quando abrimos o terminal ele por defini\u00e7\u00e3o vai ser inicializado nesta diretoria. Caso mudemos de terminal para a <code>/root</code> por exemplo, esta vai ter um <code>/</code> apenas. </p> <p>Por exemplo: </p>"},{"location":"Programming/Linux/Terminal/#root-user","title":"Root user","text":"<p>Para fazer alguma coisa com permiss\u00f5es <code>root</code>, o comando \u00e9 <code>sudo</code>, e a sess\u00e3o BASH (Borne Again Shell) vai ter um <code>#</code> \u00e0 frente do user inv\u00e9s de um <code>$</code>: </p>"},{"location":"Programming/Linux/Terminal/#documenta\u00e7\u00e3o-de-um-comando","title":"Documenta\u00e7\u00e3o de um comando","text":"<p>Para aceder \u00e0 documenta\u00e7\u00e3o de um comando existem v\u00e1rias op\u00e7\u00f5es, tais como: </p> <ul> <li><code>man &lt;command&gt;</code></li> <li><code>&lt;command&gt; -h</code> ou <code>&lt;command&gt; --help</code></li> <li><code>apropos &lt;command&gt;</code> </li> </ul> <p>Uma ferramenta muito \u00fatil para perceber o que \u00e9 que cada argumento de um comando faz \u00e9 a Explain Shell: </p>"},{"location":"Programming/Linux/cheatsheet/","title":"Cheatsheet","text":"Command Description      <code>man &lt;tool&gt;</code> Opens man pages for the specified tool.   <code>&lt;tool&gt; -h</code> Prints the help page of the tool.   <code>apropos &lt;keyword&gt;</code> Searches through man pages' descriptions for instances of a given keyword.   <code>cat</code> Concatenate and print files.   <code>whoami</code> Displays current username.   <code>id</code> Returns users identity.   <code>hostname</code> Sets or prints the name of the current host system.   <code>uname</code> Prints operating system name.   <code>pwd</code> Returns working directory name.   <code>ifconfig</code> The <code>ifconfig</code> utility is used to assign or view an address to a network interface and/or configure network interface parameters.   <code>ip</code> Ip is a utility to show or manipulate routing, network devices, interfaces, and tunnels.   <code>netstat</code> Shows network status.   <code>ss</code> Another utility to investigate sockets.   <code>ps</code> Shows process status.   <code>who</code> Displays who is logged in.   <code>env</code> Prints environment or sets and executes a command.   <code>lsblk</code> Lists block devices.   <code>lsusb</code> Lists USB devices.   <code>lsof</code> Lists opened files.   <code>lspci</code> Lists PCI devices.   <code>sudo</code> Execute command as a different user.   <code>su</code> The <code>su</code> utility requests appropriate user credentials via PAM and switches to that user ID (the default user is the superuser).  A shell is then executed.   <code>useradd</code> Creates a new user or update default new user information.   <code>userdel</code> Deletes a user account and related files.   <code>usermod</code> Modifies a user account.   <code>addgroup</code> Adds a group to the system.   <code>delgroup</code> Removes a group from the system.   <code>passwd</code> Changes user password.   <code>dpkg</code> Install, remove and configure Debian-based packages.   <code>apt</code> High-level package management command-line utility.   <code>aptitude</code> Alternative to <code>apt</code>.   <code>snap</code> Install, remove and configure snap packages.   <code>gem</code> Standard package manager for Ruby.   <code>pip</code> Standard package manager for Python.   <code>git</code> Revision control system command-line utility.   <code>systemctl</code> Command-line based service and systemd control manager.   <code>ps</code> Prints a snapshot of the current processes.   <code>journalctl</code> Query the systemd journal.   <code>kill</code> Sends a signal to a process.   <code>bg</code> Puts a process into background.   <code>jobs</code> Lists all processes that are running in the background.   <code>fg</code> Puts a process into the foreground.   <code>curl</code> Command-line utility to transfer data from or to a server.   <code>wget</code> An alternative to <code>curl</code> that downloads files from FTP or HTTP(s) server.   <code>python3 -m http.server</code> Starts a Python3 web server on TCP port 8000.   <code>ls</code> Lists directory contents.   <code>cd</code> Changes the directory.   <code>clear</code> Clears the terminal.   <code>touch</code> Creates an empty file.   <code>mkdir</code> Creates a directory.   <code>tree</code> Lists the contents of a directory recursively.   <code>mv</code> Move or rename files or directories.   <code>cp</code> Copy files or directories.   <code>nano</code> Terminal based text editor.   <code>which</code> Returns the path to a file or link.   <code>find</code> Searches for files in a directory hierarchy.   <code>updatedb</code> Updates the locale database for existing contents on the system.   <code>locate</code> Uses the locale database to find contents on the system.   <code>more</code> Pager that is used to read STDOUT or files.   <code>less</code> An alternative to <code>more</code> with more features.   <code>head</code> Prints the first ten lines of STDOUT or a file.   <code>tail</code> Prints the last ten lines of STDOUT or a file.   <code>sort</code> Sorts the contents of STDOUT or a file.   <code>grep</code> Searches for specific results that contain given patterns.   <code>cut</code> Removes sections from each line of files.   <code>tr</code> Replaces certain characters.   <code>column</code> Command-line based utility that formats its input into multiple columns.   <code>awk</code> Pattern scanning and processing language.   <code>sed</code> A stream editor for filtering and transforming text.   <code>wc</code> Prints newline, word, and byte counts for a given input.   <code>chmod</code> Changes permission of a file or directory.   <code>chown</code> Changes the owner and group of a file or directory."},{"location":"Programming/Markdown/markdown-cheat-sheet/","title":"Markdown cheat sheet","text":""},{"location":"Programming/Markdown/markdown-cheat-sheet/#markdown-equations","title":"Markdown Equations","text":"<p>\u00c9 possivel escrever equa\u00e7\u00f5es em MarkDown no formato LaTeX:</p> <ul> <li><code>$\\sqrt{25}=5$</code> \\(\\rightarrow\\) \\(\\sqrt{25}=5\\) </li> </ul>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#markdown-no-vscode","title":"Markdown no VSCode","text":"<ul> <li><code>Ctrl+Shift+V</code> - Ativa o preview do VSCode</li> <li><code>Ctrl+\\</code> - Split screen</li> <li><code>Ctrl+J</code> - Abre terminal </li> <li><code>Ctrl+Space</code> - Aparece um pop up muito util das snippets do VSCode</li> <li><code>Ctrl+Shift+P: Snippet Ranger</code> - Extens\u00e3o muito util para usar snippets, e d\u00e1 para criar os teus pr\u00f3prios. </li> </ul>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#markdown-all-in-one-extension","title":"Markdown All in One Extension","text":"<p>    Command Usage     <code>Ctrl + B</code> Toggle bold   <code>Ctrl + I</code> Toggle italic   <code>Alt+S (on Windows)</code> Toggle strikethrough1   <code>Ctrl + Shift + ]</code> Toggle heading (uplevel)   <code>Ctrl + Shift + [</code> Toggle heading (downlevel)   <code>Ctrl/Cmd + M</code> Toggle math environment   <code>Alt + C</code> Check/Uncheck task list item   <code>Ctrl/Cmd + Shift + V</code> Toggle preview   <code>Ctrl/Cmd + K V</code> Toggle preview to side   <code>Alt*Shift+F</code> Align Table"},{"location":"Programming/Markdown/markdown-cheat-sheet/#class-diagram-example--uml","title":"Class Diagram Example / UML","text":"UML Image made with Mermaid"},{"location":"Programming/Markdown/markdown-cheat-sheet/#mkdocs-usage","title":"Mkdocs Usage","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> <li><code>mkdocs gh-deploy</code> - Mete o que escreves no GitPages (este site)</li> </ul>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#admonitions","title":"Admonitions","text":"<p>Cenas bu\u00e9 \u00fateis quando queremos chamar a aten\u00e7\u00e3o para alguma cena. Eye catching! </p>  Admonitions Examples  <p>Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>  Normal<pre><code>!!! note\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre>  <p>Phasellus posuere in sem ut cursus</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>  Com titulo mudado<pre><code>!!! note \"Phasellus posuere in sem ut cursus\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre>  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>  Sem t\u00edtulo<pre><code>!!! note \"\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre>  Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>  Hidden<pre><code>??? note \n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre>  Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>  Expanded<pre><code>???+ note\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre>  <p>Info</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>  <pre><code>!!! info inline end\n\n    Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit. Nulla et euismod nulla.\n    Curabitur feugiat, tortor non consequat\n    finibus, justo purus auctor massa, nec\n    semper lorem quam in massa.\n</code></pre>  <p>Info</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>  <pre><code>!!! info inline\n\n    Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit. Nulla et euismod nulla.\n    Curabitur feugiat, tortor non consequat\n    finibus, justo purus auctor massa, nec\n    semper lorem quam in massa.\n</code></pre>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#admonition-types","title":"Admonition Types","text":"Note <p><code>note</code></p>   Abstract <p><code>abstract</code>, <code>summary</code>,<code>tldr</code></p>   Info <p><code>info</code>,<code>todo</code></p>   Tip <p><code>tip</code>,<code>hint</code>, <code>important</code></p>   Success <p><code>success</code>,<code>done</code>,<code>check</code></p>   Question <p><code>question</code>,<code>help</code>,<code>faq</code></p>   Warning <p><code>warning</code>,<code>caution</code>,<code>attention</code></p>   Failure <p><code>failure</code>,<code>fail</code>,<code>missing</code></p>   Danger <p><code>error</code>,<code>danger</code></p>   Bug <p><code>bug</code></p>   Example <p><code>example</code></p>   Quote <p><code>quote</code></p>  <p>   </p>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#but\u00f5es","title":"But\u00f5es","text":"<p> <p>Tamb\u00e9m d\u00e1 para meter but\u00f5es</p>   C\u00f3digo para But\u00e3o <pre><code>[Tamb\u00e9m d\u00e1 para meter but\u00f5es](https://python-markdown.github.io/extensions/attr_list/){ .md-button .md-button--primary }\n</code></pre>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#markdown-cheat-sheet","title":"Markdown Cheat Sheet","text":"<p>Thanks for visiting The Markdown Guide!</p> <p>This Markdown cheat sheet provides a quick overview of all the Markdown syntax elements. It can\u2019t cover every edge case, so if you need more information about any of these elements, refer to the reference guides for basic syntax and extended syntax.</p>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#basic-syntax","title":"Basic Syntax","text":"<p>These are the elements outlined in John Gruber\u2019s original design document. All Markdown applications support these elements.</p>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#heading","title":"Heading","text":""},{"location":"Programming/Markdown/markdown-cheat-sheet/#h1","title":"H1","text":""},{"location":"Programming/Markdown/markdown-cheat-sheet/#h2","title":"H2","text":""},{"location":"Programming/Markdown/markdown-cheat-sheet/#h3","title":"H3","text":""},{"location":"Programming/Markdown/markdown-cheat-sheet/#bold","title":"Bold","text":"<p>bold text</p>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#italic","title":"Italic","text":"<p>italicized text</p>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#blockquote","title":"Blockquote","text":"<p>blockquote</p>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#ordered-list","title":"Ordered List","text":"<ol> <li>First item</li> <li>Second item</li> <li>Third item</li> </ol>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#unordered-list","title":"Unordered List","text":"<ul> <li>First item</li> <li>Second item</li> <li>Third item</li> </ul>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#code","title":"Code","text":"<p><code>code</code></p>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#horizontal-rule","title":"Horizontal Rule","text":""},{"location":"Programming/Markdown/markdown-cheat-sheet/#link","title":"Link","text":"<p>Markdown Guide</p>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#image","title":"Image","text":""},{"location":"Programming/Markdown/markdown-cheat-sheet/#extended-syntax","title":"Extended Syntax","text":"<p>These elements extend the basic syntax by adding additional features. Not all Markdown applications support these elements.</p>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#table","title":"Table","text":"Syntax Description     Header Title   Paragraph Text"},{"location":"Programming/Markdown/markdown-cheat-sheet/#fenced-code-block","title":"Fenced Code Block","text":"<pre><code>{\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"age\": 25\n}\n</code></pre>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#footnote","title":"Footnote","text":"<p>Here's a sentence with a footnote. 1</p>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#heading-id","title":"Heading ID","text":""},{"location":"Programming/Markdown/markdown-cheat-sheet/#custom-id","title":"My Great Heading","text":""},{"location":"Programming/Markdown/markdown-cheat-sheet/#definition-list","title":"Definition List","text":"term definition"},{"location":"Programming/Markdown/markdown-cheat-sheet/#strikethrough","title":"Strikethrough","text":"<p>The world is flat.</p>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#task-list","title":"Task List","text":"<ul> <li> Write the press release</li> <li> Update the website</li> <li> Contact the media</li> </ul>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#emoji","title":"Emoji","text":"<p>That is so funny! </p> <p>(See also Copying and Pasting Emoji)</p>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#highlight","title":"Highlight","text":"<p>I need to highlight these very important words.</p>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#subscript","title":"Subscript","text":"<p>H2O</p>"},{"location":"Programming/Markdown/markdown-cheat-sheet/#superscript","title":"Superscript","text":"<p>X2</p>   <ol> <li> <p>This is the footnote.\u00a0\u21a9</p> </li> </ol>"},{"location":"Programming/Markdown/mkdocs-macro/","title":"mkdocs-macro","text":"<p>Esta cena permite basicamente ter fun\u00e7\u00f5es Python a rodar em Markdown. Loco.</p>"},{"location":"Programming/Markdown/mkdocs-macro/#macro","title":"Macro","text":"<p>Defini\u00e7\u00e3o de macro, segundo o mkdocs-macro</p> <p>A macro is, simply stated, a Python function with arguments that returns a string.</p> <p>Macros are called from markdown pages. The result of each call to a macro is then embedded into the page, before mkdocs renders that page into a HTML page.</p> <p>A macro may contain all the logic required; it could be as simple as a button, or as sophisticated as making a query from a database and formatting the results as markdown or HTML.</p> <p>Macros bring to mkdocs the power and flexibility of macros from wiki engines, without their complexity.</p> <p>Source</p>   <p>Macros</p> <p>\"A macro is, simply stated, a Python function with arguments that returns a string.\" Esta string pode ser c\u00f3digo Markdown! Ou HTML!</p>"},{"location":"Programming/Markdown/mkdocs-macro/#macro-global","title":"Macro Global","text":"<p>Fazes no <code>main.py</code>.</p>"},{"location":"Programming/Markdown/mkdocs-macro/#macro-local---linguagem-jinja2","title":"Macro Local - Linguagem Jinja2","text":"<p>Exemplo da documenta\u00e7\u00e3o oficial da Jinja2</p> <pre><code>{.% macro input(name, value='', type='text', size=20) -%}\n    &lt;input type=\"{{ type }}\" name=\"{{ name }}\" value=\"{{\n        value|e }}\" size=\"{{ size }}\"&gt;\n{.%- endmacro %}\n</code></pre> <p>E na p\u00e1gina podemos usar esse mesmo macro:</p> <pre><code>&lt;p&gt;{.{ input('username') }}&lt;/p&gt;\n&lt;p&gt;{.{ input('password', type='password') }}&lt;/p&gt;\n</code></pre> <p>Resultado: </p> <p>{% macro input(name, value='', type='text', size=20) -%}     </p> <p> <p>{{ input('username') }}</p> <p>{{ input('password', type='password') }}</p>"},{"location":"Programming/Markdown/mkdocs-macro/#filter","title":"Filter","text":""},{"location":"Programming/Markdown/mkdocs-macro/#vari\u00e1veis","title":"Vari\u00e1veis","text":""},{"location":"Programming/Markdown/mkdocs-macro/#vari\u00e1veis-globais","title":"Vari\u00e1veis Globais","text":"<p>Nas configura\u00e7\u00f5es do mkdocs.yml:</p> <pre><code>extra:\n    price: 12.50\n    company:\n        name: Acme\n        address: ....\n        website: www.acme.com\n</code></pre> <p>E depois pode-se usar globalmente as vari\u00e1veis nos ficheiros markdown assim: </p> <pre><code>The price of the product is {price}.\n\nSee [more information on the website]({company.website }).\n\nSee &lt;a href=\"{company.website}\"&gt;more information on the website&lt;/a&gt;.\n</code></pre>"},{"location":"Programming/Markdown/mkdocs-macro/#vari\u00e1veis-locais","title":"Vari\u00e1veis locais","text":"<p>S\u00e3o definidas dentro do documento Markdown:</p> <pre><code>{.% set acme = 'Acme Company Ltd' %.} # Sem ponto!\n\nPlease buy the great products from {{ acme }}!\n</code></pre>"},{"location":"Programming/Markdown/mkdocs-macro/#mkdocsyml","title":"mkdocs.yml","text":""},{"location":"Programming/Markdown/mkdocs-macro/#mainpy-exemplo","title":"main.py (exemplo)","text":"main.py <pre><code>\"\"\"\nBasic example of a Mkdocs-macros module\n\"\"\"\n\nimport math\n\ndef define_env(env):\n    \"\"\"\n    This is the hook for defining variables, macros and filters\n\n    - variables: the dictionary that contains the environment variables\n    - macro: a decorator function, to declare a macro.\n    - filter: a function with one of more arguments,\n        used to perform a transformation\n    \"\"\"\n\n    # add to the dictionary of variables available to markdown pages:\n    env.variables['baz'] = \"John Doe\"\n\n    # NOTE: you may also treat env.variables as a namespace,\n    #       with the dot notation:\n    env.variables.baz = \"John Doe\"\n\n    @env.macro\n    def bar(x):\n        return (2.3 * x) + 7\n\n    # If you wish, you can  declare a macro with a different name:\n    def f(x):\n        return x * x\n    env.macro(f, 'barbaz')\n\n    # or to export some predefined function\n    env.macro(math.floor) # will be exported as 'floor'\n\n    # create a jinja2 filter\n    @env.filter\n    def reverse(x):\n        \"Reverse a string (and uppercase)\"\n        return x.upper()[::-1]\n</code></pre>   Mudar o nome do main.py <p>Para isto temos de adicionar isto no mkdocs.yml, neste caso o nome do ficheiro .py seria \"source_code\":</p> <pre><code>plugins:\n    ...\n    - macros:\n         module_name: source_code\n</code></pre>"},{"location":"Programming/Markdown/mkdocs-macro/#testes","title":"testes","text":"<p>{{ git.short_commit}} ({{ git.date}}) by {{ git.author}}</p> <p>{{ git.raw }}</p> <p>{{ git.date.strftime(\"%b %d, %Y %H:%M:%S\") }}</p> <p>{{ context(git)| pretty }}</p>"}]}